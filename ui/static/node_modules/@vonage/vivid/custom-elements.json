{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/accordion/accordion.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for accordion",
          "name": "Accordion",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "expandmode",
              "type": {
                "text": "AccordionExpandMode"
              },
              "description": "Controls the expand mode of the Accordion, either allowing\nsingle or multiple item expansion.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "closeAll",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "superclass": {
            "name": "FastAccordion",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Accordion",
          "declaration": {
            "name": "Accordion",
            "module": "libs/components/src/lib/accordion/accordion.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/accordion/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerAccordion",
          "description": "Registers the accordion elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AccordionExpandMode",
          "declaration": {
            "name": "AccordionExpandMode",
            "package": "@microsoft/fast-foundation"
          }
        },
        {
          "kind": "js",
          "name": "registerAccordion",
          "declaration": {
            "name": "registerAccordion",
            "module": "libs/components/src/lib/accordion/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/accordion-item/accordion-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AccordionItem",
          "cssProperties": [
            {
              "name": "--vvd-accordion-item-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-accordion-item-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-accordion-item-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": ""
            },
            {
              "kind": "field",
              "name": "noIndicator",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the accordion-item has indicator",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "meta",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": ""
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "AccordionItemSize | undefined"
              },
              "description": "The size the accordion-item should have.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "heading"
            },
            {
              "name": "no-indicator",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the accordion-item has indicator",
              "fieldName": "noIndicator"
            },
            {
              "name": "meta",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "meta"
            },
            {
              "name": "size",
              "type": {
                "text": "AccordionItemSize | undefined"
              },
              "description": "The size the accordion-item should have.",
              "fieldName": "size"
            }
          ],
          "superclass": {
            "name": "FASTAccordionItem",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AccordionItem",
          "declaration": {
            "name": "AccordionItem",
            "module": "libs/components/src/lib/accordion-item/accordion-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/accordion-item/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerAccordionItem",
          "description": "Registers the accordion item elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerAccordionItem",
          "declaration": {
            "name": "registerAccordionItem",
            "module": "libs/components/src/lib/accordion-item/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/action-group/action-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for action-group",
          "name": "ActionGroup",
          "cssProperties": [
            {
              "name": "--vvd-action-group-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-action-group-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-action-group-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-action-group-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "ActionGroupShape | undefined"
              },
              "description": "The shape the ActionGroup should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "ActionGroupAppearance | undefined"
              },
              "description": "The appearance the ActionGroup should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "tight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether action group should have padding.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": {
                "text": "ActionGroupShape | undefined"
              },
              "description": "The shape the ActionGroup should have.",
              "fieldName": "shape"
            },
            {
              "name": "appearance",
              "type": {
                "text": "ActionGroupAppearance | undefined"
              },
              "description": "The appearance the ActionGroup should have.",
              "fieldName": "appearance"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether action group should have padding.",
              "fieldName": "tight"
            },
            {
              "name": "role",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "role"
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaLabel"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionGroup",
          "declaration": {
            "name": "ActionGroup",
            "module": "libs/components/src/lib/action-group/action-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/action-group/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerActionGroup",
          "description": "Registers the action-group elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionGroupShape",
          "declaration": {
            "name": "ActionGroupShape",
            "module": "./action-group"
          }
        },
        {
          "kind": "js",
          "name": "ActionGroupAppearance",
          "declaration": {
            "name": "ActionGroupAppearance",
            "module": "./action-group"
          }
        },
        {
          "kind": "js",
          "name": "registerActionGroup",
          "declaration": {
            "name": "registerActionGroup",
            "module": "libs/components/src/lib/action-group/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/alert/alert.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for alert",
          "name": "Alert",
          "cssProperties": [
            {
              "name": "--vvd-alert-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-alert-success-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-alert-information-primary",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-alert-information-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-alert-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-alert-alert-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-alert-warning-primary",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-alert-warning-primary-text",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-alert-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-alert-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            }
          ],
          "slots": [
            {
              "description": "The main content of the alert.",
              "name": "main"
            },
            {
              "description": "Add action items to alert using this slot.",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#timeoutID",
              "privacy": "private",
              "type": {
                "text": "NodeJS.Timeout | undefined"
              }
            },
            {
              "kind": "field",
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "if the alert is removable\naccepts boolean",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "AlertPlacement | undefined"
              },
              "default": "'bottom'",
              "description": "the placement of the alert",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the alert heading\naccepts string",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "the main text of the alert\naccepts string",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "alert header icon",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "timeoutms",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "the timeout ms to show the alert\naccepts number",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "AlertConnotation | undefined"
              },
              "description": "alert connotation",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the alert is open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "openChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "conditionedIcon",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#setupTimeout"
            },
            {
              "kind": "field",
              "name": "#closeOnEscape",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Fired when the alert is opened",
              "name": "open"
            },
            {
              "description": "Fired when the alert is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "if the alert is removable\naccepts boolean",
              "fieldName": "removable"
            },
            {
              "type": {
                "text": "AlertPlacement | undefined"
              },
              "default": "'bottom'",
              "description": "the placement of the alert",
              "fieldName": "placement"
            },
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the alert heading\naccepts string",
              "fieldName": "headline"
            },
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "the main text of the alert\naccepts string",
              "fieldName": "text"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "alert header icon",
              "fieldName": "icon"
            },
            {
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "the timeout ms to show the alert\naccepts number",
              "fieldName": "timeoutms"
            },
            {
              "name": "connotation",
              "type": {
                "text": "AlertConnotation | undefined"
              },
              "description": "alert connotation",
              "fieldName": "connotation"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the alert is open",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Alert",
          "declaration": {
            "name": "Alert",
            "module": "libs/components/src/lib/alert/alert.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/alert/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerAlert",
          "description": "Registers the alert elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AlertConnotation",
          "declaration": {
            "name": "AlertConnotation",
            "module": "./alert"
          }
        },
        {
          "kind": "js",
          "name": "registerAlert",
          "declaration": {
            "name": "registerAlert",
            "module": "libs/components/src/lib/alert/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/avatar/avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Avatar",
          "cssProperties": [
            {
              "name": "--vvd-avatar-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-avatar-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-avatar-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-avatar-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-avatar-cta-pale",
              "default": "var(--vvd-color-cta-300)"
            },
            {
              "name": "--vvd-avatar-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-avatar-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-avatar-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-avatar-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-avatar-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            },
            {
              "name": "--vvd-avatar-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-avatar-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "Assign nodes to the graphic slot to set a graphic media of any kind (e.g. image, illustration etc).",
              "name": "graphic"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "AvatarConnotation | undefined"
              },
              "description": "The connotation the avatar should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "AvatarShape | undefined"
              },
              "description": "The shape the avatar should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "AvatarAppearance | undefined"
              },
              "description": "The appearance the avatar should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "AvatarSize | undefined"
              },
              "description": "The size the avatar should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "avatar header icon",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "initials",
              "type": {
                "text": "string | undefined"
              },
              "description": "avatar name",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "AvatarConnotation | undefined"
              },
              "description": "The connotation the avatar should have.",
              "fieldName": "connotation"
            },
            {
              "name": "shape",
              "type": {
                "text": "AvatarShape | undefined"
              },
              "description": "The shape the avatar should have.",
              "fieldName": "shape"
            },
            {
              "name": "appearance",
              "type": {
                "text": "AvatarAppearance | undefined"
              },
              "description": "The appearance the avatar should have.",
              "fieldName": "appearance"
            },
            {
              "name": "size",
              "type": {
                "text": "AvatarSize | undefined"
              },
              "description": "The size the avatar should have.",
              "fieldName": "size"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "avatar header icon",
              "fieldName": "icon"
            },
            {
              "name": "initials",
              "type": {
                "text": "string | undefined"
              },
              "description": "avatar name",
              "fieldName": "initials"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Avatar",
          "declaration": {
            "name": "Avatar",
            "module": "libs/components/src/lib/avatar/avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/avatar/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerAvatar",
          "description": "Registers the avatar elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AvatarConnotation",
          "declaration": {
            "name": "AvatarConnotation",
            "module": "./avatar"
          }
        },
        {
          "kind": "js",
          "name": "AvatarShape",
          "declaration": {
            "name": "AvatarShape",
            "module": "./avatar"
          }
        },
        {
          "kind": "js",
          "name": "AvatarAppearance",
          "declaration": {
            "name": "AvatarAppearance",
            "module": "./avatar"
          }
        },
        {
          "kind": "js",
          "name": "AvatarSize",
          "declaration": {
            "name": "AvatarSize",
            "module": "./avatar"
          }
        },
        {
          "kind": "js",
          "name": "registerAvatar",
          "declaration": {
            "name": "registerAvatar",
            "module": "libs/components/src/lib/avatar/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/badge/badge.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for badge",
          "name": "Badge",
          "cssProperties": [
            {
              "name": "--vvd-badge-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-badge-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-badge-cta-intermediate",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-badge-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-badge-cta-contrast",
              "default": "var(--vvd-color-cta-800)"
            },
            {
              "name": "--vvd-badge-cta-pale",
              "default": "var(--vvd-color-cta-300)"
            },
            {
              "name": "--vvd-badge-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-badge-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-badge-success-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-badge-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-badge-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-badge-success-contrast",
              "default": "var(--vvd-color-success-800)"
            },
            {
              "name": "--vvd-badge-success-pale",
              "default": "var(--vvd-color-success-300)"
            },
            {
              "name": "--vvd-badge-success-fierce",
              "default": "var(--vvd-color-success-700)"
            },
            {
              "name": "--vvd-badge-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-badge-alert-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-badge-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-badge-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-badge-alert-contrast",
              "default": "var(--vvd-color-alert-800)"
            },
            {
              "name": "--vvd-badge-alert-pale",
              "default": "var(--vvd-color-alert-300)"
            },
            {
              "name": "--vvd-badge-alert-fierce",
              "default": "var(--vvd-color-alert-700)"
            },
            {
              "name": "--vvd-badge-warning-primary",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-badge-warning-primary-text",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-badge-warning-intermediate",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-badge-warning-soft",
              "default": "var(--vvd-color-warning-100)"
            },
            {
              "name": "--vvd-badge-warning-contrast",
              "default": "var(--vvd-color-warning-800)"
            },
            {
              "name": "--vvd-badge-warning-pale",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-badge-warning-fierce",
              "default": "var(--vvd-color-warning-700)"
            },
            {
              "name": "--vvd-badge-information-primary",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-badge-information-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-badge-information-intermediate",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-badge-information-soft",
              "default": "var(--vvd-color-information-100)"
            },
            {
              "name": "--vvd-badge-information-contrast",
              "default": "var(--vvd-color-information-800)"
            },
            {
              "name": "--vvd-badge-information-pale",
              "default": "var(--vvd-color-information-300)"
            },
            {
              "name": "--vvd-badge-information-fierce",
              "default": "var(--vvd-color-information-700)"
            },
            {
              "name": "--vvd-badge-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-badge-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-badge-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-badge-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-badge-accent-contrast",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-badge-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-badge-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "BadgeConnotation | undefined"
              },
              "description": "The connotation the badge should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "BadgeShape | undefined"
              },
              "description": "The shape the badge should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "BadgeAppearance | undefined"
              },
              "description": "The appearance the badge should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the badge's text.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "BadgeConnotation | undefined"
              },
              "description": "The connotation the badge should have.",
              "fieldName": "connotation"
            },
            {
              "name": "shape",
              "type": {
                "text": "BadgeShape | undefined"
              },
              "description": "The shape the badge should have.",
              "fieldName": "shape"
            },
            {
              "name": "appearance",
              "type": {
                "text": "BadgeAppearance | undefined"
              },
              "description": "The appearance the badge should have.",
              "fieldName": "appearance"
            },
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the badge's text.",
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Badge",
          "declaration": {
            "name": "Badge",
            "module": "libs/components/src/lib/badge/badge.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/badge/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "badgeDefinition",
          "description": "Represents a badge custom element.\nbadge is a label that holds small amounts of information.\nA badge can be used to display unread notifications, or to label a block of text."
        },
        {
          "kind": "variable",
          "name": "registerBadge",
          "description": "Registers the badge elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BadgeConnotation",
          "declaration": {
            "name": "BadgeConnotation",
            "module": "./badge"
          }
        },
        {
          "kind": "js",
          "name": "BadgeAppearance",
          "declaration": {
            "name": "BadgeAppearance",
            "module": "./badge"
          }
        },
        {
          "kind": "js",
          "name": "BadgeShape",
          "declaration": {
            "name": "BadgeShape",
            "module": "./badge"
          }
        },
        {
          "kind": "js",
          "name": "badgeDefinition",
          "declaration": {
            "name": "badgeDefinition",
            "module": "libs/components/src/lib/badge/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerBadge",
          "declaration": {
            "name": "registerBadge",
            "module": "libs/components/src/lib/badge/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/banner/banner.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for banner",
          "name": "Banner",
          "cssProperties": [
            {
              "name": "--vvd-banner-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-banner-success-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-banner-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-banner-alert-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-banner-announcement-primary",
              "default": "var(--vvd-color-announcement-500)"
            },
            {
              "name": "--vvd-banner-announcement-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-banner-warning-primary",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-banner-warning-primary-text",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-banner-information-primary",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-banner-information-primary-text",
              "default": "var(--vvd-color-canvas)"
            }
          ],
          "slots": [
            {
              "description": "Add action items to banner using this slot.",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "actionHref",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "actionText",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "ariaLive",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "BannerConnotation | undefined"
              }
            },
            {
              "kind": "field",
              "name": "conditionedIcon",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "remove",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "#handleRemoveEnd",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#closeOnKeyDown",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "role",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "role"
            },
            {
              "name": "action-href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "actionHref"
            },
            {
              "name": "action-text",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "actionText"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "removable"
            },
            {
              "name": "aria-live",
              "type": {
                "text": "any"
              },
              "fieldName": "ariaLive"
            },
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "text"
            },
            {
              "name": "connotation",
              "type": {
                "text": "BannerConnotation | undefined"
              },
              "fieldName": "connotation"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Banner",
          "declaration": {
            "name": "Banner",
            "module": "libs/components/src/lib/banner/banner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/banner/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerBanner",
          "description": "Registers the banner elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BannerConnotation",
          "declaration": {
            "name": "BannerConnotation",
            "module": "./banner"
          }
        },
        {
          "kind": "js",
          "name": "registerBanner",
          "declaration": {
            "name": "registerBanner",
            "module": "libs/components/src/lib/banner/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/breadcrumb/breadcrumb.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for breadcrumb",
          "name": "Breadcrumb",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Breadcrumb",
          "declaration": {
            "name": "Breadcrumb",
            "module": "libs/components/src/lib/breadcrumb/breadcrumb.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/breadcrumb/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerBreadcrumb",
          "description": "Registers the breadcrumb elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerBreadcrumb",
          "declaration": {
            "name": "registerBreadcrumb",
            "module": "libs/components/src/lib/breadcrumb/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/breadcrumb-item/breadcrumb-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for breadcrumb-item",
          "name": "BreadcrumbItem",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              }
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "FastBreadcrumbItem",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "libs/components/src/lib/breadcrumb-item/breadcrumb-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/breadcrumb-item/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerBreadcrumbItem",
          "description": "Registers the breadcrumb-item elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerBreadcrumbItem",
          "declaration": {
            "name": "registerBreadcrumbItem",
            "module": "libs/components/src/lib/breadcrumb-item/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/button/button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for button",
          "name": "Button",
          "cssProperties": [
            {
              "name": "--vvd-button-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-button-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-button-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-button-cta-contrast",
              "default": "var(--vvd-color-cta-800)"
            },
            {
              "name": "--vvd-button-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-button-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-button-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-button-cta-faint",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-button-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-button-success-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-button-success-primary-increment",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-button-success-contrast",
              "default": "var(--vvd-color-success-800)"
            },
            {
              "name": "--vvd-button-success-fierce",
              "default": "var(--vvd-color-success-700)"
            },
            {
              "name": "--vvd-button-success-firm",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-button-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-button-success-faint",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-button-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-button-alert-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-button-alert-primary-increment",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-button-alert-contrast",
              "default": "var(--vvd-color-alert-800)"
            },
            {
              "name": "--vvd-button-alert-fierce",
              "default": "var(--vvd-color-alert-700)"
            },
            {
              "name": "--vvd-button-alert-firm",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-button-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-button-alert-faint",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-button-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-button-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-button-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-button-accent-contrast",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-button-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            },
            {
              "name": "--vvd-button-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-button-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-button-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "ButtonConnotation | undefined"
              },
              "description": "The connotation the button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "ButtonShape | undefined"
              },
              "description": "The shape the button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "ButtonAppearance | undefined"
              },
              "description": "The appearance the button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "ButtonSize | undefined"
              },
              "description": "The size the button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "stacked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates the icon is stacked.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "pending",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Displays the button in pending state.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the button's label.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "connotation",
              "type": {
                "text": "ButtonConnotation | undefined"
              },
              "description": "The connotation the button should have.",
              "fieldName": "connotation"
            },
            {
              "name": "shape",
              "type": {
                "text": "ButtonShape | undefined"
              },
              "description": "The shape the button should have.",
              "fieldName": "shape"
            },
            {
              "name": "appearance",
              "type": {
                "text": "ButtonAppearance | undefined"
              },
              "description": "The appearance the button should have.",
              "fieldName": "appearance"
            },
            {
              "name": "size",
              "type": {
                "text": "ButtonSize | undefined"
              },
              "description": "The size the button should have.",
              "fieldName": "size"
            },
            {
              "name": "stacked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates the icon is stacked.",
              "fieldName": "stacked"
            },
            {
              "name": "pending",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Displays the button in pending state.",
              "fieldName": "pending"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the button's label.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "FoundationButton",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "libs/components/src/lib/button/button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/button/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerButton",
          "description": "Registers the button elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ButtonAppearance",
          "declaration": {
            "name": "ButtonAppearance",
            "module": "./button"
          }
        },
        {
          "kind": "js",
          "name": "ButtonConnotation",
          "declaration": {
            "name": "ButtonConnotation",
            "module": "./button"
          }
        },
        {
          "kind": "js",
          "name": "ButtonShape",
          "declaration": {
            "name": "ButtonShape",
            "module": "./button"
          }
        },
        {
          "kind": "js",
          "name": "ButtonSize",
          "declaration": {
            "name": "ButtonSize",
            "module": "./button"
          }
        },
        {
          "kind": "js",
          "name": "registerButton",
          "declaration": {
            "name": "registerButton",
            "module": "libs/components/src/lib/button/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/calendar/calendar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for calendar",
          "name": "Calendar",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-0"
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-1"
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-2"
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-3"
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-4"
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-5"
            },
            {
              "description": "Assign elements to corresponding day column using this slot.",
              "name": "day-6"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "datetime",
              "type": {
                "text": "Date | string | undefined"
              },
              "description": "The date within a week of choice.\nAccepts any parameter acceptable by the `Date()` constructor.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "startDay",
              "type": {
                "text": "'sunday' | 'monday' | undefined"
              },
              "description": "The day to show as the first within a work week.\nAccepts either Sunday or Monday\nCalendar will - programmatically - default to Monday if not specified\n\n(only applicable for views of more than a single day)",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "locales",
              "type": {
                "text": "string | string[] | undefined | undefined"
              },
              "description": "A locale string or array of locale strings that contain one or more language or locale tags.\nIf you include more than one locale string,\nlist them in descending order of priority so that the first entry is the preferred locale.\nIf you omit this parameter, the default locale of the JavaScript runtime is used.\nThis parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\ne.g. en-US | en-US, he-IL",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "hour12",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "The convention of displayed time in which the day runs from midnight to midnight and is divided into 24 or 12 hours.\nUnless provided, choice will be set according to local time preference (e.g. US = 12, IL = 24)",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "#activeCalendarEvent",
              "privacy": "private",
              "type": {
                "text": "CalendarEvent | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "getEventContext",
              "default": "getEventContext",
              "description": "Fire an event",
              "parameters": [
                {
                  "description": "event name",
                  "name": "calendarEvent"
                }
              ],
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "getCalendarEventContainingCell",
              "privacy": "private",
              "parameters": [
                {
                  "name": "calendarEvent",
                  "type": {
                    "text": "CalendarEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "arrowKeysInteractions",
              "privacy": "private",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "PredefindKeys"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "activateElement",
              "privacy": "private",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement | null | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onKeydown",
              "parameters": [
                {
                  "name": "{ key }",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "datetime",
              "type": {
                "text": "Date | string | undefined"
              },
              "description": "The date within a week of choice.\nAccepts any parameter acceptable by the `Date()` constructor.",
              "fieldName": "datetime"
            },
            {
              "name": "start-day",
              "type": {
                "text": "'sunday' | 'monday' | undefined"
              },
              "description": "The day to show as the first within a work week.\nAccepts either Sunday or Monday\nCalendar will - programmatically - default to Monday if not specified\n\n(only applicable for views of more than a single day)",
              "fieldName": "startDay"
            },
            {
              "name": "locales",
              "type": {
                "text": "string | string[] | undefined | undefined"
              },
              "description": "A locale string or array of locale strings that contain one or more language or locale tags.\nIf you include more than one locale string,\nlist them in descending order of priority so that the first entry is the preferred locale.\nIf you omit this parameter, the default locale of the JavaScript runtime is used.\nThis parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\ne.g. en-US | en-US, he-IL",
              "fieldName": "locales"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "The convention of displayed time in which the day runs from midnight to midnight and is divided into 24 or 12 hours.\nUnless provided, choice will be set according to local time preference (e.g. US = 12, IL = 24)",
              "fieldName": "hour12"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Calendar",
          "declaration": {
            "name": "Calendar",
            "module": "libs/components/src/lib/calendar/calendar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/calendar/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerCalendar",
          "description": "Registers the calendar elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerCalendar",
          "declaration": {
            "name": "registerCalendar",
            "module": "libs/components/src/lib/calendar/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/calendar-event/calendar-event.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for calendar-event",
          "name": "CalendarEvent",
          "cssProperties": [
            {
              "name": "--vvd-calendar-event-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-calendar-event-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-calendar-event-accent-contrast",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-calendar-event-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-calendar-event-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-calendar-event-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-calendar-event-cta-contrast",
              "default": "var(--vvd-color-cta-800)"
            },
            {
              "name": "--vvd-calendar-event-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-calendar-event-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-calendar-event-success-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-calendar-event-success-contrast",
              "default": "var(--vvd-color-success-800)"
            },
            {
              "name": "--vvd-calendar-event-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-calendar-event-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-calendar-event-alert-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-calendar-event-alert-contrast",
              "default": "var(--vvd-color-alert-800)"
            },
            {
              "name": "--vvd-calendar-event-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-calendar-event-warning-primary",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-calendar-event-warning-primary-text",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-calendar-event-warning-contrast",
              "default": "var(--vvd-color-warning-800)"
            },
            {
              "name": "--vvd-calendar-event-warning-soft",
              "default": "var(--vvd-color-warning-100)"
            },
            {
              "name": "--vvd-calendar-event-announcement-primary",
              "default": "var(--vvd-color-announcement-500)"
            },
            {
              "name": "--vvd-calendar-event-announcement-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-calendar-event-announcement-contrast",
              "default": "var(--vvd-color-announcement-800)"
            },
            {
              "name": "--vvd-calendar-event-announcement-soft",
              "default": "var(--vvd-color-announcement-100)"
            },
            {
              "name": "--vvd-calendar-event-information-primary",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-calendar-event-information-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-calendar-event-information-contrast",
              "default": "var(--vvd-color-information-800)"
            },
            {
              "name": "--vvd-calendar-event-information-soft",
              "default": "var(--vvd-color-information-100)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string | undefined"
              },
              "description": "the heading of the event",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "the description of the event",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "CalendarEventConnotation | undefined"
              },
              "description": "The connotation the calendar event should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "CalendarEventAppearance | undefined"
              },
              "description": "The appearance the calendar event should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "overlapCount",
              "type": {
                "text": "number | undefined"
              },
              "description": "sets card display precendence and indentation",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "start",
              "type": {
                "text": "number | undefined"
              },
              "description": "time of day event starts",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "duration",
              "type": {
                "text": "number | undefined"
              },
              "description": "event's time duration in hours",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string | undefined"
              },
              "description": "the heading of the event",
              "fieldName": "heading"
            },
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "the description of the event",
              "fieldName": "description"
            },
            {
              "name": "connotation",
              "type": {
                "text": "CalendarEventConnotation | undefined"
              },
              "description": "The connotation the calendar event should have.",
              "fieldName": "connotation"
            },
            {
              "name": "appearance",
              "type": {
                "text": "CalendarEventAppearance | undefined"
              },
              "description": "The appearance the calendar event should have.",
              "fieldName": "appearance"
            },
            {
              "name": "overlap-count",
              "type": {
                "text": "number | undefined"
              },
              "description": "sets card display precendence and indentation",
              "fieldName": "overlapCount"
            },
            {
              "type": {
                "text": "number | undefined"
              },
              "description": "time of day event starts",
              "fieldName": "start"
            },
            {
              "type": {
                "text": "number | undefined"
              },
              "description": "event's time duration in hours",
              "fieldName": "duration"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CalendarEvent",
          "declaration": {
            "name": "CalendarEvent",
            "module": "libs/components/src/lib/calendar-event/calendar-event.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/calendar-event/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerCalendarEvent",
          "description": "Registers the calendar-event elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CalendarEventAppearance",
          "declaration": {
            "name": "CalendarEventAppearance",
            "module": "./calendar-event"
          }
        },
        {
          "kind": "js",
          "name": "CalendarEventConnotation",
          "declaration": {
            "name": "CalendarEventConnotation",
            "module": "./calendar-event"
          }
        },
        {
          "kind": "js",
          "name": "registerCalendarEvent",
          "declaration": {
            "name": "registerCalendarEvent",
            "module": "libs/components/src/lib/calendar-event/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/card/card.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for card",
          "name": "Card",
          "slots": [
            {
              "description": "The graphic slot overrides the icon property.",
              "name": "graphic"
            },
            {
              "description": "The media slot is mainly for images or video content above the card header.",
              "name": "media"
            },
            {
              "description": "The meta slot is for action content in the card header.",
              "name": "meta"
            },
            {
              "description": "The footer slot is for content in the card footer.",
              "name": "footer"
            },
            {
              "description": "Assign nodes to main slot to fully override a card's predefined flow and style with your own.",
              "name": "main"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the card heading\naccepts string",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the card sub-heading\naccepts string",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the card sub-heading\naccepts string",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "card header icon",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "elevation",
              "type": {
                "text": "0 | 2 | 4 | 8 | 12 | 16 | 24 | undefined"
              },
              "description": "card elevation dp",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "graphicSlottedContent",
              "type": {
                "text": "HTMLElement[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hasMetaSlottedContent",
              "type": {
                "text": "HTMLElement[] | undefined"
              }
            }
          ],
          "attributes": [
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the card heading\naccepts string",
              "fieldName": "headline"
            },
            {
              "name": "subtitle",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the card sub-heading\naccepts string",
              "fieldName": "subtitle"
            },
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the card sub-heading\naccepts string",
              "fieldName": "text"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "card header icon",
              "fieldName": "icon"
            },
            {
              "name": "elevation",
              "type": {
                "text": "0 | 2 | 4 | 8 | 12 | 16 | 24 | undefined"
              },
              "description": "card elevation dp",
              "fieldName": "elevation"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Card",
          "declaration": {
            "name": "Card",
            "module": "libs/components/src/lib/card/card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/card/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerCard",
          "description": "Registers the card elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerCard",
          "declaration": {
            "name": "registerCard",
            "module": "libs/components/src/lib/card/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/checkbox/checkbox.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "keySpace",
          "type": {
            "text": "' '"
          },
          "default": "' '"
        },
        {
          "kind": "class",
          "description": "Base class for checkbox",
          "name": "Checkbox",
          "cssProperties": [
            {
              "name": "--vvd-checkbox-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-checkbox-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-checkbox-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-checkbox-cta-intermediate",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-checkbox-cta-backdrop",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-checkbox-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-checkbox-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-checkbox-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-checkbox-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-checkbox-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-checkbox-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-checkbox-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "CheckboxConnotation | undefined"
              },
              "description": "The connotation the checklist should have.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "CheckboxConnotation | undefined"
              },
              "description": "The connotation the checklist should have.",
              "fieldName": "connotation"
            }
          ],
          "superclass": {
            "name": "FoundationCheckbox",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keySpace",
          "declaration": {
            "name": "keySpace",
            "module": "libs/components/src/lib/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "libs/components/src/lib/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/checkbox/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerCheckbox",
          "description": "Registers the checkbox elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerCheckbox",
          "declaration": {
            "name": "registerCheckbox",
            "module": "libs/components/src/lib/checkbox/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/combobox/combobox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for combobox",
          "name": "Combobox",
          "cssProperties": [
            {
              "name": "--vvd-combobox-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-combobox-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-combobox-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-combobox-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "PopupPlacement | undefined"
              },
              "description": "the placement of the combobox\n\nHTML Attribute: string"
            },
            {
              "kind": "field",
              "name": "_popup",
              "type": {
                "text": "Popup"
              }
            },
            {
              "kind": "field",
              "name": "_anchor",
              "type": {
                "text": "HTMLElement"
              }
            }
          ],
          "attributes": [
            {
              "name": "placement",
              "type": {
                "text": "PopupPlacement | undefined"
              },
              "description": "the placement of the combobox\n\nHTML Attribute: string",
              "fieldName": "placement"
            }
          ],
          "superclass": {
            "name": "FoundationCombobox",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Combobox",
          "declaration": {
            "name": "Combobox",
            "module": "libs/components/src/lib/combobox/combobox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/combobox/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "comboboxRegistries",
          "type": {
            "text": "array"
          },
          "default": "[combobox, ...iconRegistries, ...popupRegistries, ...focusRegistries, ...listboxOptionRegistries]"
        },
        {
          "kind": "variable",
          "name": "registerCombobox",
          "description": "Registers the combobox elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PopupPlacement",
          "declaration": {
            "name": "PopupPlacement",
            "module": "./combobox"
          }
        },
        {
          "kind": "js",
          "name": "comboboxRegistries",
          "declaration": {
            "name": "comboboxRegistries",
            "module": "libs/components/src/lib/combobox/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerCombobox",
          "declaration": {
            "name": "registerCombobox",
            "module": "libs/components/src/lib/combobox/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/data-grid/data-grid-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for data-grid",
          "name": "DataGridCell",
          "cssProperties": [
            {
              "name": "--vvd-data-grid-cell-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-data-grid-cell-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-data-grid-cell-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-data-grid-cell-cta-faint",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-data-grid-cell-cta-pale",
              "default": "var(--vvd-color-cta-300)"
            },
            {
              "name": "--vvd-data-grid-cell-cta-dim",
              "default": "var(--vvd-color-cta-200)"
            },
            {
              "name": "--vvd-data-grid-cell-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-data-grid-cell-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-data-grid-cell-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-data-grid-cell-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-data-grid-cell-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-data-grid-cell-accent-dim",
              "default": "var(--vvd-color-neutral-200)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ariaSelected",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "Indicates the selected status.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaSort",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "Indicates the sort status.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "ariaSelectedChanged",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "string | null"
                  }
                },
                {
                  "name": "selectedState",
                  "type": {
                    "text": "string | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocusin",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocusout",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "updateCellStyle"
            }
          ],
          "attributes": [
            {
              "name": "aria-selected",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "Indicates the selected status.",
              "fieldName": "ariaSelected"
            },
            {
              "name": "aria-sort",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "Indicates the sort status.",
              "fieldName": "ariaSort"
            }
          ],
          "superclass": {
            "name": "FoundationDataGridCell",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataGridCell",
          "declaration": {
            "name": "DataGridCell",
            "module": "libs/components/src/lib/data-grid/data-grid-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/data-grid/data-grid-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for data-grid",
          "name": "DataGridRow",
          "cssProperties": [
            {
              "name": "--vvd-data-grid-row-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-data-grid-row-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-data-grid-row-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-data-grid-row-cta-faint",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-data-grid-row-cta-pale",
              "default": "var(--vvd-color-cta-300)"
            },
            {
              "name": "--vvd-data-grid-row-cta-dim",
              "default": "var(--vvd-color-cta-200)"
            },
            {
              "name": "--vvd-data-grid-row-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-data-grid-row-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-data-grid-row-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-data-grid-row-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-data-grid-row-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-data-grid-row-accent-dim",
              "default": "var(--vvd-color-neutral-200)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ariaSelected",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "Indicates the selected status.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "aria-selected",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "description": "Indicates the selected status.",
              "fieldName": "ariaSelected"
            }
          ],
          "superclass": {
            "name": "FoundationDataGridRow",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataGridRow",
          "declaration": {
            "name": "DataGridRow",
            "module": "libs/components/src/lib/data-grid/data-grid-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/data-grid/data-grid.options.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DataGridCellSortStates",
          "type": {
            "text": "{\n\tnone: 'none',\n\tascending: 'ascending',\n\tdescending: 'descending',\n\tother: 'other'\n}"
          },
          "default": "{\n\tnone: 'none',\n\tascending: 'ascending',\n\tdescending: 'descending',\n\tother: 'other'\n}",
          "description": "Enumerates the data grid auto generated header options\ndefault option generates a non-sticky header row",
          "privacy": "public"
        },
        {
          "kind": "variable",
          "name": "GenerateHeaderOptions",
          "type": {
            "text": "{\n\tnone: 'none',\n\tdefault: 'default',\n\tsticky: 'sticky',\n}"
          },
          "default": "{\n\tnone: 'none',\n\tdefault: 'default',\n\tsticky: 'sticky',\n}",
          "description": "Enumerates the data grid auto generated header options\ndefault option generates a non-sticky header row",
          "privacy": "public"
        },
        {
          "kind": "variable",
          "name": "DataGridCellTypes",
          "type": {
            "text": "{\n\tdefault: 'default',\n\tcolumnHeader: 'columnheader',\n\trowHeader: 'rowheader',\n}"
          },
          "default": "{\n\tdefault: 'default',\n\tcolumnHeader: 'columnheader',\n\trowHeader: 'rowheader',\n}",
          "description": "Enumerates possible data grid cell types.",
          "privacy": "public"
        },
        {
          "kind": "variable",
          "name": "DataGridRowTypes",
          "type": {
            "text": "{\n\tdefault: 'default',\n\theader: 'header',\n\tstickyHeader: 'sticky-header',\n}"
          },
          "default": "{\n\tdefault: 'default',\n\theader: 'header',\n\tstickyHeader: 'sticky-header',\n}",
          "description": "Enumerates possible data grid row types",
          "privacy": "public"
        },
        {
          "kind": "variable",
          "name": "DataGridCellTypeClass",
          "type": {
            "text": "{\n\tcolumnheader: 'column-header',\n\tdefault: '',\n\trowheader: 'row-header',\n}"
          },
          "default": "{\n\tcolumnheader: 'column-header',\n\tdefault: '',\n\trowheader: 'row-header',\n}",
          "description": "Class names for the data grid cell",
          "privacy": "public"
        },
        {
          "kind": "variable",
          "name": "DataGridCellRole",
          "type": {
            "text": "{\n\tcolumnheader: 'columnheader',\n\trowheader: 'rowheader',\n\tdefault: 'gridcell',\n}"
          },
          "default": "{\n\tcolumnheader: 'columnheader',\n\trowheader: 'rowheader',\n\tdefault: 'gridcell',\n}",
          "description": "Roles for the data grid cell",
          "privacy": "public"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataGridCellSortStates",
          "declaration": {
            "name": "DataGridCellSortStates",
            "module": "libs/components/src/lib/data-grid/data-grid.options.ts"
          }
        },
        {
          "kind": "js",
          "name": "GenerateHeaderOptions",
          "declaration": {
            "name": "GenerateHeaderOptions",
            "module": "libs/components/src/lib/data-grid/data-grid.options.ts"
          }
        },
        {
          "kind": "js",
          "name": "DataGridCellTypes",
          "declaration": {
            "name": "DataGridCellTypes",
            "module": "libs/components/src/lib/data-grid/data-grid.options.ts"
          }
        },
        {
          "kind": "js",
          "name": "DataGridRowTypes",
          "declaration": {
            "name": "DataGridRowTypes",
            "module": "libs/components/src/lib/data-grid/data-grid.options.ts"
          }
        },
        {
          "kind": "js",
          "name": "DataGridCellTypeClass",
          "declaration": {
            "name": "DataGridCellTypeClass",
            "module": "libs/components/src/lib/data-grid/data-grid.options.ts"
          }
        },
        {
          "kind": "js",
          "name": "DataGridCellRole",
          "declaration": {
            "name": "DataGridCellRole",
            "module": "libs/components/src/lib/data-grid/data-grid.options.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/data-grid/data-grid.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DataGridSelectionMode",
          "type": {
            "text": "{\n\tnone: 'none',\n\tsingleRow: 'single-row',\n\tmultiRow: 'multi-row',\n\tsingleCell: 'single-cell',\n\tmultiCell: 'multi-cell',\n}"
          },
          "default": "{\n\tnone: 'none',\n\tsingleRow: 'single-row',\n\tmultiRow: 'multi-row',\n\tsingleCell: 'single-cell',\n\tmultiCell: 'multi-cell',\n}"
        },
        {
          "kind": "class",
          "description": "Base class for data-grid",
          "name": "DataGrid",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "selectionMode",
              "type": {
                "text": "DataGridSelectionMode | undefined"
              },
              "description": "Indicates the selection mode.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "#selectedRows",
              "privacy": "private",
              "type": {
                "text": "DataGridRow[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#selectedCells",
              "privacy": "private",
              "type": {
                "text": "DataGridCell[]"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "selectionModeChanged",
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "DataGridSelectionMode"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#handleKeypress",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleCellSelection",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleRowSelection",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#setSelectedState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#resetSelection",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#initSelections",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "generateColumns",
              "static": true,
              "parameters": [
                {
                  "name": "rowData",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "selection-mode",
              "type": {
                "text": "DataGridSelectionMode | undefined"
              },
              "description": "Indicates the selection mode.",
              "fieldName": "selectionMode"
            }
          ],
          "superclass": {
            "name": "FoundationDataGrid",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataGridSelectionMode",
          "declaration": {
            "name": "DataGridSelectionMode",
            "module": "libs/components/src/lib/data-grid/data-grid.ts"
          }
        },
        {
          "kind": "js",
          "name": "DataGrid",
          "declaration": {
            "name": "DataGrid",
            "module": "libs/components/src/lib/data-grid/data-grid.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/data-grid/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "dataGrid"
        },
        {
          "kind": "variable",
          "name": "dataGridRow"
        },
        {
          "kind": "variable",
          "name": "dataGridCell"
        },
        {
          "kind": "variable",
          "name": "dataGridElements",
          "type": {
            "text": "array"
          },
          "default": "[dataGridCell, dataGridRow, dataGrid, ...iconRegistries]"
        },
        {
          "kind": "variable",
          "name": "registerDataGrid",
          "description": "Registers the data-grid element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dataGrid",
          "declaration": {
            "name": "dataGrid",
            "module": "libs/components/src/lib/data-grid/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataGridRow",
          "declaration": {
            "name": "dataGridRow",
            "module": "libs/components/src/lib/data-grid/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataGridCell",
          "declaration": {
            "name": "dataGridCell",
            "module": "libs/components/src/lib/data-grid/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataGridElements",
          "declaration": {
            "name": "dataGridElements",
            "module": "libs/components/src/lib/data-grid/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerDataGrid",
          "declaration": {
            "name": "registerDataGrid",
            "module": "libs/components/src/lib/data-grid/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/date-picker/date-picker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Single date picker component.",
          "name": "DatePicker",
          "members": [
            {
              "kind": "method",
              "name": "#updateValueDueToUserInteraction",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "DateStr"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'date'"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "string"
              },
              "description": "The earliest accepted date of the date-picker.",
              "privacy": "public",
              "default": "''",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "string"
              },
              "description": "The latest accepted date of the date-picker.",
              "privacy": "public",
              "default": "''",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "initialValue",
              "type": {
                "text": "string"
              },
              "description": "The initial value of the date-picker.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentValue",
              "type": {
                "text": "string"
              },
              "description": "The current value of the date-picker.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "readOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date-picker is readonly.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getFocusableEls",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#isMonthAfterValidRange",
              "parameters": [
                {
                  "name": "month",
                  "type": {
                    "text": "Month"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#isMonthBeforeValidRange",
              "parameters": [
                {
                  "name": "month",
                  "type": {
                    "text": "Month"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getCustomValidationError",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | null"
                }
              },
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#dismissOnClickOutside",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isClosingPopup",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#openPopupIfPossible",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getSelectedDates",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DateStr[]"
                }
              },
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            }
          ],
          "superclass": {
            "name": "DatePickerBase",
            "module": "/libs/components/src/shared/date-picker/date-picker-base"
          },
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The earliest accepted date of the date-picker.",
              "default": "''",
              "fieldName": "min",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The initial value of the date-picker.",
              "fieldName": "initialValue",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "name": "current-value",
              "type": {
                "text": "string"
              },
              "description": "The current value of the date-picker.",
              "fieldName": "currentValue",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date-picker is readonly.",
              "fieldName": "readOnly",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "libs/components/src/lib/date-picker/date-picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/date-picker/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "datePickerDefinition"
        },
        {
          "kind": "variable",
          "name": "registerDatePicker",
          "description": "Registers the date-picker element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "datePickerDefinition",
          "declaration": {
            "name": "datePickerDefinition",
            "module": "libs/components/src/lib/date-picker/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerDatePicker",
          "declaration": {
            "name": "registerDatePicker",
            "module": "libs/components/src/lib/date-picker/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/date-range-picker/date-range-picker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for date-range-picker",
          "name": "DateRangePicker",
          "members": [
            {
              "kind": "field",
              "name": "initialStart",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The initial start value. This value sets the `start` property\nonly when the `start` property has not been explicitly set."
            },
            {
              "kind": "field",
              "name": "initialEnd",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The initial end value. This value sets the `end` property\nonly when the `end` property has not been explicitly set."
            },
            {
              "kind": "field",
              "name": "#isInternalValueUpdate",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "start",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The start value of the date range."
            },
            {
              "kind": "field",
              "name": "end",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The end value of the date range."
            },
            {
              "kind": "field",
              "name": "currentStart",
              "type": {
                "text": "string"
              },
              "description": "The current start value of the element. This property serves as a mechanism\nto set the `start` property through both property assignment and the\n.setAttribute() method. This is useful for setting the field's value\nin UI libraries that bind data through the .setAttribute() API\nand don't support IDL attribute binding."
            },
            {
              "kind": "field",
              "name": "currentEnd",
              "type": {
                "text": "string"
              },
              "description": "The current end value of the element. This property serves as a mechanism\nto set the `end` property through both property assignment and the\n.setAttribute() method. This is useful for setting the field's value\nin UI libraries that bind data through the .setAttribute() API\nand don't support IDL attribute binding."
            },
            {
              "kind": "method",
              "name": "#updateValues",
              "parameters": [
                {
                  "name": "range",
                  "type": {
                    "text": "Partial<DateRange>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleChangedValues"
            },
            {
              "kind": "method",
              "name": "#updateFormValue"
            },
            {
              "kind": "field",
              "name": "setFormValue"
            },
            {
              "kind": "method",
              "name": "#getVisibleRange",
              "return": {
                "type": {
                  "text": "Partial<DateRange>"
                }
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "string"
              },
              "description": "The earliest accepted date of the date-picker.",
              "privacy": "public",
              "default": "''",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "string"
              },
              "description": "The latest accepted date of the date-picker.",
              "privacy": "public",
              "default": "''",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "initialValue",
              "type": {
                "text": "string"
              },
              "description": "The initial value of the date-picker.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentValue",
              "type": {
                "text": "string"
              },
              "description": "The current value of the date-picker.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "readOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date-picker is readonly.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getFocusableEls",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#isMonthAfterValidRange",
              "parameters": [
                {
                  "name": "month",
                  "type": {
                    "text": "Month"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#isMonthBeforeValidRange",
              "parameters": [
                {
                  "name": "month",
                  "type": {
                    "text": "Month"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getCustomValidationError",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | null"
                }
              },
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#dismissOnClickOutside",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isClosingPopup",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "#openPopupIfPossible",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getSelectedDates",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DateStr[]"
                }
              },
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            }
          ],
          "events": [
            {
              "description": "Event emitted when the start value changes",
              "name": "input:start"
            },
            {
              "description": "Event emitted when the end value changes",
              "name": "input:end"
            }
          ],
          "attributes": [
            {
              "name": "start",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The initial start value. This value sets the `start` property\nonly when the `start` property has not been explicitly set.",
              "fieldName": "initialStart"
            },
            {
              "name": "end",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The initial end value. This value sets the `end` property\nonly when the `end` property has not been explicitly set.",
              "fieldName": "initialEnd"
            },
            {
              "name": "current-start",
              "type": {
                "text": "string"
              },
              "description": "The current start value of the element. This property serves as a mechanism\nto set the `start` property through both property assignment and the\n.setAttribute() method. This is useful for setting the field's value\nin UI libraries that bind data through the .setAttribute() API\nand don't support IDL attribute binding.",
              "fieldName": "currentStart"
            },
            {
              "name": "current-end",
              "type": {
                "text": "string"
              },
              "description": "The current end value of the element. This property serves as a mechanism\nto set the `end` property through both property assignment and the\n.setAttribute() method. This is useful for setting the field's value\nin UI libraries that bind data through the .setAttribute() API\nand don't support IDL attribute binding.",
              "fieldName": "currentEnd"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The earliest accepted date of the date-picker.",
              "default": "''",
              "fieldName": "min",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The initial value of the date-picker.",
              "fieldName": "initialValue",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "name": "current-value",
              "type": {
                "text": "string"
              },
              "description": "The current value of the date-picker.",
              "fieldName": "currentValue",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date-picker is readonly.",
              "fieldName": "readOnly",
              "inheritedFrom": {
                "name": "DatePickerBase",
                "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
              }
            }
          ],
          "superclass": {
            "name": "DatePickerBase",
            "module": "/libs/components/src/shared/date-picker/date-picker-base"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "libs/components/src/lib/date-range-picker/date-range-picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/date-range-picker/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "dateRangePickerDefinition"
        },
        {
          "kind": "variable",
          "name": "registerDateRangePicker",
          "description": "Registers the date-range-picker element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dateRangePickerDefinition",
          "declaration": {
            "name": "dateRangePickerDefinition",
            "module": "libs/components/src/lib/date-range-picker/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerDateRangePicker",
          "declaration": {
            "name": "registerDateRangePicker",
            "module": "libs/components/src/lib/date-range-picker/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/dialog/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerDialog",
          "description": "Registers the dialog elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconPlacement",
          "declaration": {
            "name": "IconPlacement",
            "module": "./dialog"
          }
        },
        {
          "kind": "js",
          "name": "registerDialog",
          "declaration": {
            "name": "registerDialog",
            "module": "libs/components/src/lib/dialog/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/dialog/dialog.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "isDialogSupported"
        },
        {
          "kind": "class",
          "description": "Base class for dialog",
          "name": "Dialog",
          "slots": [
            {
              "description": "Use the graphic slot in order to replace the icon.",
              "name": "graphic"
            },
            {
              "description": "Use the body slot in order to add custom HTML to the dialog.",
              "name": "body"
            },
            {
              "description": "Use the footer slot in order to add action buttons to the bottom of the dialog.",
              "name": "footer"
            },
            {
              "description": "Assign nodes to the main slot to fully override a dialog’s predefined flow and style with your own.",
              "name": "main"
            },
            {
              "description": "Use the action-items slot in order to add action buttons to the bottom of the dialog.",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates dialog's state",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "iconPlacement",
              "type": {
                "text": "IconPlacement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "fullWidthBody",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "ariaLabelledBy",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "ariaDescribedBy",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#modal",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "returnValue",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "modal",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#dialogElement",
              "privacy": "private",
              "type": {
                "text": "HTMLDialogElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#dialog",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "openChanged",
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#handleScrimClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleInternalFormSubmit",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "close"
            },
            {
              "kind": "method",
              "name": "#handleModal",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "show"
            },
            {
              "kind": "method",
              "name": "showModal"
            },
            {
              "kind": "field",
              "name": "footerSlottedContent",
              "type": {
                "text": "HTMLElement[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "actionItemsSlottedContent",
              "type": {
                "text": "HTMLElement[] | undefined"
              }
            }
          ],
          "events": [
            {
              "description": "Fired when the dialog is closed.",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates dialog's state",
              "fieldName": "open"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "icon"
            },
            {
              "name": "icon-placement",
              "type": {
                "text": "IconPlacement | undefined"
              },
              "fieldName": "iconPlacement"
            },
            {
              "name": "subtitle",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "subtitle"
            },
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "headline"
            },
            {
              "name": "full-width-body",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fullWidthBody"
            },
            {
              "name": "aria-labelledby",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaLabelledBy"
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaLabel"
            },
            {
              "name": "aria-describedby",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaDescribedBy"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isDialogSupported",
          "declaration": {
            "name": "isDialogSupported",
            "module": "libs/components/src/lib/dialog/dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "Dialog",
            "module": "libs/components/src/lib/dialog/dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/divider/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerDivider",
          "description": "Registers the divider elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerDivider",
          "declaration": {
            "name": "registerDivider",
            "module": "libs/components/src/lib/divider/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/divider/divider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for divider",
          "name": "Divider",
          "superclass": {
            "name": "FoundationDivider",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Divider",
          "declaration": {
            "name": "Divider",
            "module": "libs/components/src/lib/divider/divider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/elevation/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerElevation",
          "description": "Registers the elevation elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerElevation",
          "declaration": {
            "name": "registerElevation",
            "module": "libs/components/src/lib/elevation/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/elevation/elevation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for elevation",
          "name": "Elevation",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dp",
              "type": {
                "text": "0 | 2 | 4 | 8 | 12 | 16 | 24 | undefined"
              },
              "description": "Indicates the elevation's dp.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "noShadow",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "toggles the elevation's shadow.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "dp",
              "type": {
                "text": "0 | 2 | 4 | 8 | 12 | 16 | 24 | undefined"
              },
              "description": "Indicates the elevation's dp.",
              "fieldName": "dp"
            },
            {
              "name": "no-shadow",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "toggles the elevation's shadow.",
              "fieldName": "noShadow"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Elevation",
          "declaration": {
            "name": "Elevation",
            "module": "libs/components/src/lib/elevation/elevation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/empty-state/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "emptyStateDefinition"
        },
        {
          "kind": "variable",
          "name": "registerEmptyState",
          "description": "Registers the empty-state element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "emptyStateDefinition",
          "declaration": {
            "name": "emptyStateDefinition",
            "module": "libs/components/src/lib/empty-state/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerEmptyState",
          "declaration": {
            "name": "registerEmptyState",
            "module": "libs/components/src/lib/empty-state/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/empty-state/empty-state.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "An empty state element. Used when there is no data to display to the user.",
          "name": "EmptyState",
          "slots": [
            {
              "description": "The default slot controls the body text of the empty state",
              "name": ""
            },
            {
              "description": "The graphic slot allows overriding the icon with a custom illustration",
              "name": "graphic"
            },
            {
              "description": "Slot to add action items to the empty state",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "An optional headline for the empty state.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon for the empty state.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "An optional headline for the empty state.",
              "fieldName": "headline"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon for the empty state.",
              "fieldName": "icon"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptyState",
          "declaration": {
            "name": "EmptyState",
            "module": "libs/components/src/lib/empty-state/empty-state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/fab/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fabDefinition",
          "description": "The calendar-event element is a custom element that is used to display a single event in a calendar."
        },
        {
          "kind": "variable",
          "name": "registerFab",
          "description": "Registers the FAB elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FabConnotation",
          "declaration": {
            "name": "FabConnotation",
            "module": "./fab"
          }
        },
        {
          "kind": "js",
          "name": "FABSize",
          "declaration": {
            "name": "FABSize",
            "module": "./fab"
          }
        },
        {
          "kind": "js",
          "name": "fabDefinition",
          "declaration": {
            "name": "fabDefinition",
            "module": "libs/components/src/lib/fab/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerFab",
          "declaration": {
            "name": "registerFab",
            "module": "libs/components/src/lib/fab/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/fab/fab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for fab",
          "name": "Fab",
          "cssProperties": [
            {
              "name": "--vvd-fab-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-fab-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-fab-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-fab-accent-contrast",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-fab-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            },
            {
              "name": "--vvd-fab-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-fab-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-fab-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-fab-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-fab-cta-contrast",
              "default": "var(--vvd-color-cta-800)"
            },
            {
              "name": "--vvd-fab-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-fab-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            }
          ],
          "slots": [
            {
              "description": "Slot to add an icon to fab.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "FabConnotation | undefined"
              },
              "description": "The connotation the fab should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "FABSize | undefined"
              },
              "description": "The size the FAB should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the fab's label.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "FabConnotation | undefined"
              },
              "description": "The connotation the fab should have.",
              "fieldName": "connotation"
            },
            {
              "name": "size",
              "type": {
                "text": "FABSize | undefined"
              },
              "description": "The size the FAB should have.",
              "fieldName": "size"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the fab's label.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "FoundationButton",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Fab",
          "declaration": {
            "name": "Fab",
            "module": "libs/components/src/lib/fab/fab.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/file-picker/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "filePickerDefinition"
        },
        {
          "kind": "variable",
          "name": "registerFilePicker",
          "description": "Registers the file-picker element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filePickerDefinition",
          "declaration": {
            "name": "filePickerDefinition",
            "module": "libs/components/src/lib/file-picker/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerFilePicker",
          "declaration": {
            "name": "registerFilePicker",
            "module": "libs/components/src/lib/file-picker/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/file-picker/file-picker.form-associated.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormAssociatedFilePicker",
          "members": [
            {
              "kind": "field",
              "name": "proxy",
              "type": {
                "text": "HTMLInputElement"
              }
            }
          ],
          "mixins": [
            {
              "name": "FormAssociated",
              "package": "@microsoft/fast-foundation"
            }
          ],
          "superclass": {
            "name": "_FilePicker",
            "module": "libs/components/src/lib/file-picker/file-picker.form-associated.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormAssociatedFilePicker",
          "declaration": {
            "name": "FormAssociatedFilePicker",
            "module": "libs/components/src/lib/file-picker/file-picker.form-associated.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/file-picker/file-picker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "File-picker component",
          "name": "FilePicker",
          "members": [
            {
              "kind": "field",
              "name": "#dropzone",
              "privacy": "private",
              "type": {
                "text": "Dropzone | undefined"
              }
            },
            {
              "kind": "field",
              "name": "files",
              "type": {
                "text": "File[]"
              },
              "description": "Files that have been added to the file picker and passed validation.",
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "maxFiles",
              "type": {
                "text": "number | undefined"
              },
              "description": "The max files that can be selected.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "maxFilesChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "maxFileSize",
              "type": {
                "text": "number"
              },
              "default": "256",
              "description": "The max file size that can be selected.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "maxFileSizeChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "accept",
              "type": {
                "text": "string | undefined"
              },
              "description": "List of accepted files types",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "acceptChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "FileUploaderSize | undefined"
              },
              "description": "The size the file-uploader should have.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "nameChanged",
              "parameters": [
                {
                  "name": "previous",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "next",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "buttonTag",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'vwc-button'",
              "description": "Used internally to hold the tag that button is registered at."
            },
            {
              "kind": "method",
              "name": "#chooseFile",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#updateHiddenFileInput",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#handleFilesChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#updateFormValue"
            },
            {
              "kind": "method",
              "name": "#setValueToAFakePathLikeNativeInput"
            },
            {
              "kind": "field",
              "name": "setFormValue"
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "formResetCallback",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "autoDiscover",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "proxy",
              "type": {
                "text": "HTMLInputElement"
              },
              "inheritedFrom": {
                "name": "FormAssociatedFilePicker",
                "module": "libs/components/src/lib/file-picker/file-picker.form-associated.ts"
              }
            }
          ],
          "events": [
            {
              "description": "Emitted when a file is added or removed.",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "max-files",
              "type": {
                "text": "number | undefined"
              },
              "description": "The max files that can be selected.",
              "fieldName": "maxFiles"
            },
            {
              "name": "max-file-size",
              "type": {
                "text": "number"
              },
              "default": "256",
              "description": "The max file size that can be selected.",
              "fieldName": "maxFileSize"
            },
            {
              "name": "accept",
              "type": {
                "text": "string | undefined"
              },
              "description": "List of accepted files types",
              "fieldName": "accept"
            },
            {
              "name": "size",
              "type": {
                "text": "FileUploaderSize | undefined"
              },
              "description": "The size the file-uploader should have.",
              "fieldName": "size"
            }
          ],
          "superclass": {
            "name": "FormAssociatedFilePicker",
            "module": "/libs/components/src/lib/file-picker/file-picker.form-associated"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FilePicker",
          "declaration": {
            "name": "FilePicker",
            "module": "libs/components/src/lib/file-picker/file-picker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/file-picker/locale.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/focus/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "focusDefinition",
          "description": "Represents a focus custom element.\nfocus is a label that holds small amounts of information.\nA focus can be used to display unread notifications, or to label a block of text.\nFocuss don’t work for navigation because they can't include a hyperlink."
        },
        {
          "kind": "variable",
          "name": "registerFocus",
          "description": "Registers the focus component",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "focusDefinition",
          "declaration": {
            "name": "focusDefinition",
            "module": "libs/components/src/lib/focus/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerFocus",
          "declaration": {
            "name": "registerFocus",
            "module": "libs/components/src/lib/focus/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/focus/focus.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for focus",
          "name": "Focus",
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Focus",
          "declaration": {
            "name": "Focus",
            "module": "libs/components/src/lib/focus/focus.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/header/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "headerDefinition",
          "description": "The header element."
        },
        {
          "kind": "variable",
          "name": "registerHeader",
          "description": "Registers the header elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "headerDefinition",
          "declaration": {
            "name": "headerDefinition",
            "module": "libs/components/src/lib/header/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerHeader",
          "declaration": {
            "name": "registerHeader",
            "module": "libs/components/src/lib/header/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/header/header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for header",
          "name": "Header",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            },
            {
              "description": "Nodes assigned to action-items slot will be set at the end of the header.",
              "name": "action-items"
            },
            {
              "description": "Content vertically aligned with header.",
              "name": "app-content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "elevationShadow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "header elevation shadow",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "alternate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "applies scheme alternate to header region",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "elevation-shadow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "header elevation shadow",
              "fieldName": "elevationShadow"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "applies scheme alternate to header region",
              "fieldName": "alternate"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "libs/components/src/lib/header/header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/icon/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "iconDefinition"
        },
        {
          "kind": "variable",
          "name": "registerIcon",
          "description": "Registers the icon component & its prerequisite components with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconConnotation",
          "declaration": {
            "name": "IconConnotation",
            "module": "./icon"
          }
        },
        {
          "kind": "js",
          "name": "iconDefinition",
          "declaration": {
            "name": "iconDefinition",
            "module": "libs/components/src/lib/icon/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerIcon",
          "declaration": {
            "name": "registerIcon",
            "module": "libs/components/src/lib/icon/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/icon/icon.placeholder.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PLACEHOLDER_ICON",
          "default": "`<svg width=\"80%\" height=\"80%\" viewBox=\"0 0 64 64\">\n    <g>\n        <g stroke-width=\"6\" stroke-linecap=\"round\" fill=\"none\">\n            <path stroke=\"currentColor\" d=\"M4,32 c0,15,12,28,28,28c8,0,16-4,21-9\">\n            </path>\n            <path d=\"M60,32 C60,16,47.464,4,32,4S4,16,4,32\">\n            </path>\n            <animateTransform values=\"0,32,32;360,32,32\" attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"750ms\">\n            </animateTransform>\n        </g>\n    </g>\n</svg>`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PLACEHOLDER_ICON",
          "declaration": {
            "name": "PLACEHOLDER_ICON",
            "module": "libs/components/src/lib/icon/icon.placeholder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/icon/icon.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Icon",
          "cssProperties": [
            {
              "name": "--vvd-icon-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-icon-announcement-primary",
              "default": "var(--vvd-color-announcement-500)"
            },
            {
              "name": "--vvd-icon-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-icon-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-icon-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-icon-information-primary",
              "default": "var(--vvd-color-information-500)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "IconConnotation | undefined"
              },
              "description": "The connotation the icon should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "-6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | undefined"
              }
            },
            {
              "kind": "field",
              "name": "iconLoaded",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates which icon to resolve.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "iconUrl",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "nameChanged",
              "async": true
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "IconConnotation | undefined"
              },
              "description": "The connotation the icon should have.",
              "fieldName": "connotation"
            },
            {
              "name": "size",
              "type": {
                "text": "-6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | undefined"
              },
              "fieldName": "size"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates which icon to resolve.",
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Icon",
          "declaration": {
            "name": "Icon",
            "module": "libs/components/src/lib/icon/icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/layout/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "layoutDefinition",
          "description": "Represents a layout custom element.\nlayout is..."
        },
        {
          "kind": "variable",
          "name": "registerLayout",
          "description": "Registers the layout elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AUTO_SIZING",
          "declaration": {
            "name": "AUTO_SIZING",
            "module": "./layout"
          }
        },
        {
          "kind": "js",
          "name": "ColumnBasis",
          "declaration": {
            "name": "ColumnBasis",
            "module": "./layout"
          }
        },
        {
          "kind": "js",
          "name": "ColumnSpacing",
          "declaration": {
            "name": "ColumnSpacing",
            "module": "./layout"
          }
        },
        {
          "kind": "js",
          "name": "RowSpacing",
          "declaration": {
            "name": "RowSpacing",
            "module": "./layout"
          }
        },
        {
          "kind": "js",
          "name": "Gutters",
          "declaration": {
            "name": "Gutters",
            "module": "./layout"
          }
        },
        {
          "kind": "js",
          "name": "layoutDefinition",
          "declaration": {
            "name": "layoutDefinition",
            "module": "libs/components/src/lib/layout/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerLayout",
          "declaration": {
            "name": "registerLayout",
            "module": "libs/components/src/lib/layout/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/layout/layout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for layout\n\n[--layout-grid-template-columns=repeat([the `auto-sizing` mapped value],\nminmax([the `column-basis` mapped value], 1fr))] - Controls the `grid-template-columns` of the layout.",
          "name": "Layout",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "gutters",
              "type": {
                "text": "Gutters | undefined"
              },
              "description": "sets the initial preferred margin from predefined available options",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "columnBasis",
              "type": {
                "text": "ColumnBasis | undefined"
              },
              "description": "sets the initial preferred measure of a column from predefined available options",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "columnSpacing",
              "type": {
                "text": "ColumnSpacing | undefined"
              },
              "description": "sets the initial preferred spacing of a column from predefined available options",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "rowSpacing",
              "type": {
                "text": "RowSpacing | undefined"
              },
              "description": "sets the initial preferred spacing of a row from predefined available options",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "autoSizing",
              "type": {
                "text": "AUTO_SIZING | undefined"
              },
              "description": "sets the initial preferred auto-sizing from predefined available options",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "gutters",
              "type": {
                "text": "Gutters | undefined"
              },
              "description": "sets the initial preferred margin from predefined available options",
              "fieldName": "gutters"
            },
            {
              "name": "column-basis",
              "type": {
                "text": "ColumnBasis | undefined"
              },
              "description": "sets the initial preferred measure of a column from predefined available options",
              "fieldName": "columnBasis"
            },
            {
              "name": "column-spacing",
              "type": {
                "text": "ColumnSpacing | undefined"
              },
              "description": "sets the initial preferred spacing of a column from predefined available options",
              "fieldName": "columnSpacing"
            },
            {
              "name": "row-spacing",
              "type": {
                "text": "RowSpacing | undefined"
              },
              "description": "sets the initial preferred spacing of a row from predefined available options",
              "fieldName": "rowSpacing"
            },
            {
              "name": "auto-sizing",
              "type": {
                "text": "AUTO_SIZING | undefined"
              },
              "description": "sets the initial preferred auto-sizing from predefined available options",
              "fieldName": "autoSizing"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Layout",
          "declaration": {
            "name": "Layout",
            "module": "libs/components/src/lib/layout/layout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/listbox/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "listboxDefinition",
          "description": "The calendar-event element is a custom element that is used to display a single event in a calendar."
        },
        {
          "kind": "variable",
          "name": "registerListbox",
          "description": "Registers the listbox elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LisboxAppearance",
          "declaration": {
            "name": "LisboxAppearance",
            "module": "./listbox"
          }
        },
        {
          "kind": "js",
          "name": "listboxDefinition",
          "declaration": {
            "name": "listboxDefinition",
            "module": "libs/components/src/lib/listbox/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerListbox",
          "declaration": {
            "name": "registerListbox",
            "module": "libs/components/src/lib/listbox/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/listbox/listbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for listbox",
          "name": "Listbox",
          "cssProperties": [
            {
              "name": "--vvd-listbox-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-listbox-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-listbox-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-listbox-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "LisboxAppearance | undefined"
              },
              "description": "The appearance the listbox should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical' | undefined"
              },
              "description": "The direction the listbox options should flow.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "orientationChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "ListboxShape | undefined"
              },
              "description": "The shape the listbox should have.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "slottedOptionsChanged",
              "parameters": [
                {
                  "name": "prev",
                  "type": {
                    "text": "Element[] | undefined"
                  }
                },
                {
                  "name": "next",
                  "type": {
                    "text": "Element[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#disableSlottedChildren",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "LisboxAppearance | undefined"
              },
              "description": "The appearance the listbox should have.",
              "fieldName": "appearance"
            },
            {
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical' | undefined"
              },
              "description": "The direction the listbox options should flow.",
              "fieldName": "orientation"
            },
            {
              "name": "shape",
              "type": {
                "text": "ListboxShape | undefined"
              },
              "description": "The shape the listbox should have.",
              "fieldName": "shape"
            }
          ],
          "superclass": {
            "name": "FoundationListboxElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Listbox",
          "declaration": {
            "name": "Listbox",
            "module": "libs/components/src/lib/listbox/listbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/menu/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "menuDefinition",
          "description": "The menu element is a custom element that is used to display a list of menu items."
        },
        {
          "kind": "variable",
          "name": "registerMenu",
          "description": "Registers the calendar-event elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Placement",
          "declaration": {
            "name": "Placement",
            "package": "@floating-ui/dom"
          }
        },
        {
          "kind": "js",
          "name": "menuDefinition",
          "declaration": {
            "name": "menuDefinition",
            "module": "libs/components/src/lib/menu/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerMenu",
          "declaration": {
            "name": "registerMenu",
            "module": "libs/components/src/lib/menu/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/menu/menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for menu",
          "name": "Menu",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            },
            {
              "description": "Used to add additional content to the top of the menu.",
              "name": "header"
            },
            {
              "description": "Used to add action items to the bottom of the menu.",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#anchorEl",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#observeMissingAnchor",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "Placement | undefined"
              },
              "default": "'bottom'",
              "description": "placement of the menu",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "AnchorType"
              },
              "default": "''",
              "description": "id or direct reference to the menu's anchor element",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "anchorChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "AnchorType"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "AnchorType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "autoDismiss",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the menu will automatically close when\nthe user clicks outside the menu",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "autoDismissChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the menu is open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "openChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setupAnchor",
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#cleanupAnchor",
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#openIfClosed",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#closeOnClickOutside",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "actionItemsSlottedContent",
              "type": {
                "text": "HTMLElement[] | undefined"
              }
            }
          ],
          "events": [
            {
              "description": "Fired when the menu is opened",
              "name": "open"
            },
            {
              "description": "Fired when the menu is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "Placement | undefined"
              },
              "default": "'bottom'",
              "description": "placement of the menu",
              "fieldName": "placement"
            },
            {
              "type": {
                "text": "AnchorType"
              },
              "default": "''",
              "description": "id or direct reference to the menu's anchor element",
              "fieldName": "anchor"
            },
            {
              "name": "auto-dismiss",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the menu will automatically close when\nthe user clicks outside the menu",
              "fieldName": "autoDismiss"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the menu is open",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "FastMenu",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Menu",
          "declaration": {
            "name": "Menu",
            "module": "libs/components/src/lib/menu/menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/menu-item/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "menuItemDefinition",
          "description": "The menu-item element."
        },
        {
          "kind": "variable",
          "name": "registerMenuItem",
          "description": "Registers the menu-item elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "menuItemDefinition",
          "declaration": {
            "name": "menuItemDefinition",
            "module": "libs/components/src/lib/menu-item/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerMenuItem",
          "declaration": {
            "name": "registerMenuItem",
            "module": "libs/components/src/lib/menu-item/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/menu-item/menu-item.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "MenuItemRole",
          "type": {
            "text": "{\n\t...FastMenuItemRole,\n\tpresentation: 'presentation',\n}"
          },
          "default": "{\n\t...FastMenuItemRole,\n\tpresentation: 'presentation',\n}"
        },
        {
          "kind": "class",
          "description": "Base class for menu-item",
          "name": "MenuItem",
          "cssProperties": [
            {
              "name": "--vvd-menu-item-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-menu-item-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-menu-item-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-menu-item-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-menu-item-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-menu-item-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-menu-item-accent-dim",
              "default": "var(--vvd-color-neutral-200)"
            }
          ],
          "slots": [
            {
              "description": "Assign nodes to the `meta` slot to set a badge or an additional icon.",
              "name": "meta"
            },
            {
              "description": "Assign a Menu to the `submenu` slot to add a submenu.",
              "name": "submenu"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the menu item's text.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "textSecondary",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the menu item's secondary text.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "checkTrailing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Controls the placement of the menu item's checkmark or radio icon.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "checkedAppearance",
              "type": {
                "text": "CheckAppearance | undefined"
              },
              "description": "Controls the appearance of the check indicator.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "#submenuArray",
              "privacy": "private",
              "type": {
                "text": "Menu[]"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "#updateSubmenu"
            },
            {
              "kind": "method",
              "name": "#collapseExpandedItem"
            },
            {
              "kind": "method",
              "name": "#expandedChange"
            },
            {
              "kind": "field",
              "name": "updateSubmenu"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the menu item's text.",
              "fieldName": "text"
            },
            {
              "name": "text-secondary",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the menu item's secondary text.",
              "fieldName": "textSecondary"
            },
            {
              "name": "check-trailing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Controls the placement of the menu item's checkmark or radio icon.",
              "fieldName": "checkTrailing"
            },
            {
              "name": "check-appearance",
              "type": {
                "text": "CheckAppearance | undefined"
              },
              "description": "Controls the appearance of the check indicator.",
              "fieldName": "checkedAppearance"
            }
          ],
          "superclass": {
            "name": "FastMenuItem",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MenuItemRole",
          "declaration": {
            "name": "MenuItemRole",
            "module": "libs/components/src/lib/menu-item/menu-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "MenuItem",
          "declaration": {
            "name": "MenuItem",
            "module": "libs/components/src/lib/menu-item/menu-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/nav/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "navDefinition",
          "description": "The nav element."
        },
        {
          "kind": "variable",
          "name": "registerNav",
          "description": "Registers the nav elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "navDefinition",
          "declaration": {
            "name": "navDefinition",
            "module": "libs/components/src/lib/nav/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerNav",
          "declaration": {
            "name": "registerNav",
            "module": "libs/components/src/lib/nav/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/nav/nav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A Nav Item Custom HTML Element.\nBased largely on the https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element .",
          "name": "Nav",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Nav",
          "declaration": {
            "name": "Nav",
            "module": "libs/components/src/lib/nav/nav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/nav-disclosure/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "navDisclosureDefinition",
          "description": "The nav-disclosure element."
        },
        {
          "kind": "variable",
          "name": "registerNavDisclosure",
          "description": "Registers the nav-disclosure elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "navDisclosureDefinition",
          "declaration": {
            "name": "navDisclosureDefinition",
            "module": "libs/components/src/lib/nav-disclosure/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerNavDisclosure",
          "declaration": {
            "name": "registerNavDisclosure",
            "module": "libs/components/src/lib/nav-disclosure/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/nav-disclosure/nav-disclosure.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A Nav Item Custom HTML Element.\nBased largely on the https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element .",
          "name": "NavDisclosure",
          "cssProperties": [
            {
              "name": "--vvd-nav-disclosure-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-nav-disclosure-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-nav-disclosure-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-nav-disclosure-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-nav-disclosure-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            },
            {
              "description": "A slot to add additional content to the nav disclosure.",
              "name": "meta"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "details",
              "type": {
                "text": "HTMLDetailsElement"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": ""
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the nav-disclosure is open",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaCurrent",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#onToggle",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Event emitted when the nav disclosure is toggled.",
              "name": "toggle"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "label"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the nav-disclosure is open",
              "fieldName": "open"
            },
            {
              "name": "aria-current",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaCurrent"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NavDisclosure",
          "declaration": {
            "name": "NavDisclosure",
            "module": "libs/components/src/lib/nav-disclosure/nav-disclosure.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/nav-item/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "navItemDefinition",
          "description": "The nav-item element is a custom element that is used to display a single item in a nav."
        },
        {
          "kind": "variable",
          "name": "registerNavItem",
          "description": "Registers the nav-item elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "navItemDefinition",
          "declaration": {
            "name": "navItemDefinition",
            "module": "libs/components/src/lib/nav-item/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerNavItem",
          "declaration": {
            "name": "registerNavItem",
            "module": "libs/components/src/lib/nav-item/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/nav-item/nav-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A Nav Item Custom HTML Element.\nBased largely on the https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element .",
          "name": "NavItem",
          "cssProperties": [
            {
              "name": "--vvd-nav-item-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-nav-item-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-nav-item-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-nav-item-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-nav-item-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "A slot to add additional content to the nav item.",
              "name": "meta"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "getBodyTemplate"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the text anchor's text.",
              "privacy": "public",
              "inheritedFrom": {
                "name": "TextAnchor",
                "module": "libs/components/src/lib/text-anchor/text-anchor.ts"
              }
            }
          ],
          "superclass": {
            "name": "TextAnchor",
            "module": "/libs/components/src/lib/text-anchor/text-anchor"
          },
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the text anchor's text.",
              "fieldName": "text",
              "inheritedFrom": {
                "name": "TextAnchor",
                "module": "libs/components/src/lib/text-anchor/text-anchor.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NavItem",
          "declaration": {
            "name": "NavItem",
            "module": "libs/components/src/lib/nav-item/nav-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/note/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "noteDefinition",
          "description": "The note element."
        },
        {
          "kind": "variable",
          "name": "registerNote",
          "description": "Registers the note elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NoteConnotation",
          "declaration": {
            "name": "NoteConnotation",
            "module": "./note"
          }
        },
        {
          "kind": "js",
          "name": "noteDefinition",
          "declaration": {
            "name": "noteDefinition",
            "module": "libs/components/src/lib/note/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerNote",
          "declaration": {
            "name": "registerNote",
            "module": "libs/components/src/lib/note/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/note/note.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for note",
          "name": "Note",
          "cssProperties": [
            {
              "name": "--vvd-note-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-note-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-note-success-backdrop",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-note-information-primary",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-note-information-intermediate",
              "default": "var(--vvd-color-information-500)"
            },
            {
              "name": "--vvd-note-information-backdrop",
              "default": "var(--vvd-color-information-50)"
            },
            {
              "name": "--vvd-note-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-note-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-note-alert-backdrop",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-note-warning-primary",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-note-warning-intermediate",
              "default": "var(--vvd-color-warning-300)"
            },
            {
              "name": "--vvd-note-warning-backdrop",
              "default": "var(--vvd-color-warning-50)"
            },
            {
              "name": "--vvd-note-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-note-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-note-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            }
          ],
          "slots": [
            {
              "description": "Any slotted content will appear below the headline.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the note's headline text",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "NoteConnotation | undefined"
              }
            }
          ],
          "attributes": [
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the note's headline text",
              "fieldName": "headline"
            },
            {
              "name": "connotation",
              "type": {
                "text": "NoteConnotation | undefined"
              },
              "fieldName": "connotation"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Note",
          "declaration": {
            "name": "Note",
            "module": "libs/components/src/lib/note/note.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/number-field/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "numberFieldDefinition",
          "description": "The number-field element."
        },
        {
          "kind": "variable",
          "name": "numberFieldRegistries",
          "type": {
            "text": "array"
          },
          "default": "[numberFieldDefinition(), ...buttonRegistries, ...dividerRegistries]"
        },
        {
          "kind": "variable",
          "name": "registerNumberField",
          "description": "Registers the number-field elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NumberFieldAppearance",
          "declaration": {
            "name": "NumberFieldAppearance",
            "module": "./number-field"
          }
        },
        {
          "kind": "js",
          "name": "NumberFieldShape",
          "declaration": {
            "name": "NumberFieldShape",
            "module": "./number-field"
          }
        },
        {
          "kind": "js",
          "name": "numberFieldDefinition",
          "declaration": {
            "name": "numberFieldDefinition",
            "module": "libs/components/src/lib/number-field/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "numberFieldRegistries",
          "declaration": {
            "name": "numberFieldRegistries",
            "module": "libs/components/src/lib/number-field/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerNumberField",
          "declaration": {
            "name": "registerNumberField",
            "module": "libs/components/src/lib/number-field/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/number-field/number-field.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for number-field",
          "name": "NumberField",
          "cssProperties": [
            {
              "name": "--vvd-text-field-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-text-field-success-backdrop",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-text-field-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-text-field-success-firm",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-text-field-success-faint",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-text-field-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-text-field-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-text-field-alert-backdrop",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-text-field-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-text-field-alert-firm",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-text-field-alert-faint",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-text-field-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-text-field-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-text-field-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-text-field-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-text-field-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-text-field-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-text-field-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "NumberFieldAppearance | undefined"
              }
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "NumberFieldShape | undefined"
              }
            },
            {
              "kind": "field",
              "name": "autoComplete",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "method",
              "name": "stepChanged",
              "parameters": [
                {
                  "name": "_previous",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "next",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "stepUp"
            },
            {
              "kind": "method",
              "name": "stepDown",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "NumberFieldAppearance | undefined"
              },
              "fieldName": "appearance"
            },
            {
              "name": "shape",
              "type": {
                "text": "NumberFieldShape | undefined"
              },
              "fieldName": "shape"
            },
            {
              "name": "autoComplete",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "autoComplete"
            }
          ],
          "superclass": {
            "name": "FastNumberField",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NumberField",
          "declaration": {
            "name": "NumberField",
            "module": "libs/components/src/lib/number-field/number-field.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/option/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "listboxOptionDefinition",
          "description": "The listbox-option element."
        },
        {
          "kind": "variable",
          "name": "registerOption",
          "description": "Registers the listbox-option elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "listboxOptionDefinition",
          "declaration": {
            "name": "listboxOptionDefinition",
            "module": "libs/components/src/lib/option/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerOption",
          "declaration": {
            "name": "registerOption",
            "module": "libs/components/src/lib/option/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/option/option.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for option",
          "name": "ListboxOption",
          "cssProperties": [
            {
              "name": "--vvd-option-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-option-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-option-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-option-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-option-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-option-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-option-accent-dim",
              "default": "var(--vvd-color-neutral-200)"
            }
          ],
          "slots": [
            {
              "description": "Slot to add an icon to the option.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_text",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "public",
              "description": ""
            },
            {
              "kind": "field",
              "name": "text"
            },
            {
              "kind": "field",
              "name": "_label",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "_text"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "_label"
            }
          ],
          "superclass": {
            "name": "FoundationListboxOption",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ListboxOption",
          "declaration": {
            "name": "ListboxOption",
            "module": "libs/components/src/lib/option/option.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/pagination/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "paginationDefinition"
        },
        {
          "kind": "variable",
          "name": "registerPagination",
          "description": "Registers the pagination element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationShape",
          "declaration": {
            "name": "PaginationShape",
            "module": "./pagination"
          }
        },
        {
          "kind": "js",
          "name": "PaginationSize",
          "declaration": {
            "name": "PaginationSize",
            "module": "./pagination"
          }
        },
        {
          "kind": "js",
          "name": "paginationDefinition",
          "declaration": {
            "name": "paginationDefinition",
            "module": "libs/components/src/lib/pagination/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerPagination",
          "declaration": {
            "name": "registerPagination",
            "module": "libs/components/src/lib/pagination/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/pagination/pagination.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for pagination",
          "name": "Pagination",
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "PaginationSize | undefined"
              },
              "description": "The size the pagination should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "PaginationShape | undefined"
              },
              "description": "The shape the pagination should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "paginationButtons",
              "type": {
                "text": "Button[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "prevButton",
              "type": {
                "text": "Button | undefined"
              }
            },
            {
              "kind": "field",
              "name": "nextButton",
              "type": {
                "text": "Button | undefined"
              }
            },
            {
              "kind": "field",
              "name": "navIcons",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "pagesList",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "total",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "selectedIndex",
              "type": {
                "text": "number | undefined"
              },
              "default": "0"
            },
            {
              "kind": "method",
              "name": "totalChanged",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectedIndexChanged",
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "paginationButtonsChanged",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "Button[] | undefined"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "Button[]"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "PaginationSize | undefined"
              },
              "description": "The size the pagination should have.",
              "fieldName": "size"
            },
            {
              "name": "shape",
              "type": {
                "text": "PaginationShape | undefined"
              },
              "description": "The shape the pagination should have.",
              "fieldName": "shape"
            },
            {
              "name": "nav-icons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "navIcons"
            },
            {
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "total"
            },
            {
              "name": "selected-index",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "fieldName": "selectedIndex"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "libs/components/src/lib/pagination/pagination.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/popup/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "popupDefinition",
          "description": "Represents a popup custom element.\npopup is..."
        },
        {
          "kind": "variable",
          "name": "registerPopup",
          "description": "Registers the popup elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Popup",
          "declaration": {
            "name": "Popup",
            "module": "./popup"
          }
        },
        {
          "kind": "js",
          "name": "Strategy",
          "declaration": {
            "name": "Strategy",
            "package": "@floating-ui/dom"
          }
        },
        {
          "kind": "js",
          "name": "popupDefinition",
          "declaration": {
            "name": "popupDefinition",
            "module": "libs/components/src/lib/popup/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerPopup",
          "declaration": {
            "name": "registerPopup",
            "module": "libs/components/src/lib/popup/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/popup/popup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for popup",
          "name": "Popup",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#middleware",
              "privacy": "private",
              "type": {
                "text": "Array<any>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#cleanup",
              "privacy": "private",
              "type": {
                "text": "() => void | undefined"
              }
            },
            {
              "kind": "field",
              "name": "popupEl",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "arrowEl",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the popup is open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "openChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "dismissible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "adds close button to the popup",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "adds small triangle to indicate the trigger element",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "alternate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "set the color-scheme to dark",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "Placement | undefined"
              },
              "description": "the placement of the popup",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "strategy",
              "type": {
                "text": "Strategy | undefined"
              },
              "default": "'fixed'",
              "description": "the strategy of the popup",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "string | HTMLElement | undefined"
              },
              "description": "ID reference to element in the popup’s owner document or HTMLElement.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updatePosition",
              "description": "Updates popup's position",
              "privacy": "public",
              "async": true
            },
            {
              "kind": "method",
              "name": "#assignPopupPosition",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#assignArrowPosition",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "anchorEl",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Gets the anchor element by id",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hide",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the popup is open",
              "fieldName": "open"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "adds close button to the popup",
              "fieldName": "dismissible"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "adds small triangle to indicate the trigger element",
              "fieldName": "arrow"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "set the color-scheme to dark",
              "fieldName": "alternate"
            },
            {
              "type": {
                "text": "Placement | undefined"
              },
              "description": "the placement of the popup",
              "fieldName": "placement"
            },
            {
              "type": {
                "text": "Strategy | undefined"
              },
              "default": "'fixed'",
              "description": "the strategy of the popup",
              "fieldName": "strategy"
            },
            {
              "name": "anchor",
              "type": {
                "text": "string | HTMLElement | undefined"
              },
              "description": "ID reference to element in the popup’s owner document or HTMLElement.",
              "fieldName": "anchor"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Popup",
          "declaration": {
            "name": "Popup",
            "module": "libs/components/src/lib/popup/popup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/progress/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "progressDefinition",
          "description": "The progress element."
        },
        {
          "kind": "variable",
          "name": "registerProgress",
          "description": "Registers the progress elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProgressConnotation",
          "declaration": {
            "name": "ProgressConnotation",
            "module": "./progress"
          }
        },
        {
          "kind": "js",
          "name": "ProgressShape",
          "declaration": {
            "name": "ProgressShape",
            "module": "./progress"
          }
        },
        {
          "kind": "js",
          "name": "progressDefinition",
          "declaration": {
            "name": "progressDefinition",
            "module": "libs/components/src/lib/progress/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerProgress",
          "declaration": {
            "name": "registerProgress",
            "module": "libs/components/src/lib/progress/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/progress/progress.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for progress",
          "name": "Progress",
          "cssProperties": [
            {
              "name": "--vvd-progress-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-progress-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-progress-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-progress-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-progress-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-progress-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-progress-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-progress-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "ProgressShape | undefined"
              },
              "description": "Indicates the progress' shape.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "ProgressConnotation | undefined"
              },
              "description": "Indicates the progress' connotation.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates the progress' reverse status.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": {
                "text": "ProgressShape | undefined"
              },
              "description": "Indicates the progress' shape.",
              "fieldName": "shape"
            },
            {
              "name": "connotation",
              "type": {
                "text": "ProgressConnotation | undefined"
              },
              "description": "Indicates the progress' connotation.",
              "fieldName": "connotation"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates the progress' reverse status.",
              "fieldName": "reverse"
            }
          ],
          "superclass": {
            "name": "BaseProgress",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Progress",
          "declaration": {
            "name": "Progress",
            "module": "libs/components/src/lib/progress/progress.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/progress-ring/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "progressRingDefinition",
          "description": "The progress-ring element."
        },
        {
          "kind": "variable",
          "name": "registerProgressRing",
          "description": "Registers the progress-ring  elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProgressRingConnotation",
          "declaration": {
            "name": "ProgressRingConnotation",
            "module": "./progress-ring"
          }
        },
        {
          "kind": "js",
          "name": "progressRingDefinition",
          "declaration": {
            "name": "progressRingDefinition",
            "module": "libs/components/src/lib/progress-ring/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerProgressRing",
          "declaration": {
            "name": "registerProgressRing",
            "module": "libs/components/src/lib/progress-ring/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/progress-ring/progress-ring.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for progress-ring",
          "name": "ProgressRing",
          "cssProperties": [
            {
              "name": "--vvd-progress-ring-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-progress-ring-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-progress-ring-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-progress-ring-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "ProgressRingConnotation | undefined"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "-6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | undefined"
              }
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "ProgressRingConnotation | undefined"
              },
              "fieldName": "connotation"
            },
            {
              "name": "size",
              "type": {
                "text": "-6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | undefined"
              },
              "fieldName": "size"
            }
          ],
          "superclass": {
            "name": "BaseProgress",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProgressRing",
          "declaration": {
            "name": "ProgressRing",
            "module": "libs/components/src/lib/progress-ring/progress-ring.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/radio/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "radioDefinition",
          "description": "The radio element."
        },
        {
          "kind": "variable",
          "name": "registerRadio",
          "description": "Registers the radio elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "radioDefinition",
          "declaration": {
            "name": "radioDefinition",
            "module": "libs/components/src/lib/radio/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerRadio",
          "declaration": {
            "name": "registerRadio",
            "module": "libs/components/src/lib/radio/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/radio/radio.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for radio",
          "name": "Radio",
          "cssProperties": [
            {
              "name": "--vvd-radio-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-radio-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-radio-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-radio-cta-intermediate",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-radio-cta-backdrop",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-radio-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-radio-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-radio-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-radio-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-radio-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-radio-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-radio-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the radio's label.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "RadioConnotation | undefined"
              },
              "description": "The connotation the radioButton should have.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the radio's label.",
              "fieldName": "label"
            },
            {
              "name": "connotation",
              "type": {
                "text": "RadioConnotation | undefined"
              },
              "description": "The connotation the radioButton should have.",
              "fieldName": "connotation"
            }
          ],
          "superclass": {
            "name": "FastRadio",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Radio",
          "declaration": {
            "name": "Radio",
            "module": "libs/components/src/lib/radio/radio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/radio-group/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "radioGroupDefinition",
          "description": "The radio-group element is a custom element that is used to display a group of radio buttons."
        },
        {
          "kind": "variable",
          "name": "registerRadioGroup",
          "description": "Registers the radio-group elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "radioGroupDefinition",
          "declaration": {
            "name": "radioGroupDefinition",
            "module": "libs/components/src/lib/radio-group/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerRadioGroup",
          "declaration": {
            "name": "registerRadioGroup",
            "module": "libs/components/src/lib/radio-group/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/radio-group/radio-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for radio-group",
          "name": "RadioGroup",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the group's label.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the group's label.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "FastRadioGroup",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "libs/components/src/lib/radio-group/radio-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/select/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "selectDefinition",
          "description": "The select element."
        },
        {
          "kind": "variable",
          "name": "registerSelect",
          "description": "Registers the select elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SelectAppearance",
          "declaration": {
            "name": "SelectAppearance",
            "module": "./select"
          }
        },
        {
          "kind": "js",
          "name": "SelectShape",
          "declaration": {
            "name": "SelectShape",
            "module": "./select"
          }
        },
        {
          "kind": "js",
          "name": "selectDefinition",
          "declaration": {
            "name": "selectDefinition",
            "module": "libs/components/src/lib/select/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerSelect",
          "declaration": {
            "name": "registerSelect",
            "module": "libs/components/src/lib/select/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/select/select.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for select",
          "name": "Select",
          "cssProperties": [
            {
              "name": "--vvd-select-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-select-success-backdrop",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-select-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-select-success-firm",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-select-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-select-alert-backdrop",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-select-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-select-alert-firm",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-select-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-select-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-select-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-select-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            },
            {
              "description": "Slot to add an icon to the select control.",
              "name": "icon"
            },
            {
              "description": "Slot to add meta content to the select control.",
              "name": "meta"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_popup",
              "type": {
                "text": "Popup"
              }
            },
            {
              "kind": "field",
              "name": "_anchor",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "SelectAppearance | undefined"
              },
              "description": "The appearance attribute.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "SelectShape | undefined"
              },
              "description": "The shape attribute.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "fixedDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "The fixed-dropdown attribute.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "The placeholder attribute.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "displayValue",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setDefaultSelectedOption",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "SelectAppearance | undefined"
              },
              "description": "The appearance attribute.",
              "fieldName": "appearance"
            },
            {
              "name": "shape",
              "type": {
                "text": "SelectShape | undefined"
              },
              "description": "The shape attribute.",
              "fieldName": "shape"
            },
            {
              "name": "fixed-dropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "The fixed-dropdown attribute.",
              "fieldName": "fixedDropdown"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "The placeholder attribute.",
              "fieldName": "placeholder"
            }
          ],
          "superclass": {
            "name": "FoundationSelect",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Select",
          "declaration": {
            "name": "Select",
            "module": "libs/components/src/lib/select/select.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/side-drawer/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "sideDrawerDefinition",
          "description": "Represents a side-drawer custom element."
        },
        {
          "kind": "variable",
          "name": "registerSideDrawer",
          "description": "Registers the side-drawer elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sideDrawerDefinition",
          "declaration": {
            "name": "sideDrawerDefinition",
            "module": "libs/components/src/lib/side-drawer/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerSideDrawer",
          "declaration": {
            "name": "registerSideDrawer",
            "module": "libs/components/src/lib/side-drawer/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/side-drawer/side-drawer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for side-drawer",
          "name": "SideDrawer",
          "slots": [
            {
              "description": "Sets assigned nodes to the side drawer itself.",
              "name": ""
            },
            {
              "description": "Sets assigned nodes to the main application content, the side drawer is opened next to.",
              "name": "app-content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "alternate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "applies scheme alternate region",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "modal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "sets the side drawer's type to modal",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the side drawer is open",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "trailing",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "sets the side of the side drawer",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "#close",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#open",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "events": [
            {
              "description": "Fired when the side drawer is closed.",
              "name": "close"
            },
            {
              "description": "Fired when the side drawer is opened.",
              "name": "open"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "applies scheme alternate region",
              "fieldName": "alternate"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "sets the side drawer's type to modal",
              "fieldName": "modal"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the side drawer is open",
              "fieldName": "open"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "sets the side of the side drawer",
              "fieldName": "trailing"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SideDrawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "libs/components/src/lib/side-drawer/side-drawer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/slider/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "sliderDefinition",
          "description": "The slider element."
        },
        {
          "kind": "variable",
          "name": "registerSlider",
          "description": "Registers the slider elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliderDefinition",
          "declaration": {
            "name": "sliderDefinition",
            "module": "libs/components/src/lib/slider/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerSlider",
          "declaration": {
            "name": "registerSlider",
            "module": "libs/components/src/lib/slider/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/slider/slider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for slider",
          "name": "Slider",
          "members": [
            {
              "kind": "field",
              "name": "markers",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Display markers on/off",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Display markers on/off",
              "fieldName": "markers"
            }
          ],
          "superclass": {
            "name": "FastSlider",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slider",
          "declaration": {
            "name": "Slider",
            "module": "libs/components/src/lib/slider/slider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/split-button/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "registerSplitButton",
          "description": "Registers the button elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SplitButtonAppearance",
          "declaration": {
            "name": "SplitButtonAppearance",
            "module": "./split-button"
          }
        },
        {
          "kind": "js",
          "name": "SplitButtonConnotation",
          "declaration": {
            "name": "SplitButtonConnotation",
            "module": "./split-button"
          }
        },
        {
          "kind": "js",
          "name": "SplitButtonShape",
          "declaration": {
            "name": "SplitButtonShape",
            "module": "./split-button"
          }
        },
        {
          "kind": "js",
          "name": "SplitButtonSize",
          "declaration": {
            "name": "SplitButtonSize",
            "module": "./split-button"
          }
        },
        {
          "kind": "js",
          "name": "registerSplitButton",
          "declaration": {
            "name": "registerSplitButton",
            "module": "libs/components/src/lib/split-button/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/split-button/split-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for split button",
          "name": "SplitButton",
          "cssProperties": [
            {
              "name": "--vvd-split-button-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-split-button-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-split-button-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-split-button-cta-contrast",
              "default": "var(--vvd-color-cta-800)"
            },
            {
              "name": "--vvd-split-button-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-split-button-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-split-button-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-split-button-cta-faint",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-split-button-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-split-button-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-split-button-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-split-button-accent-contrast",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-split-button-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            },
            {
              "name": "--vvd-split-button-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-split-button-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-split-button-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_action",
              "type": {
                "text": "HTMLButtonElement"
              },
              "description": "Action HTML button element",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "HTMLButtonElement"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_indicator",
              "type": {
                "text": "HTMLButtonElement"
              },
              "description": "Indicator HTML button element",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "indicator",
              "type": {
                "text": "HTMLButtonElement"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "SplitButtonConnotation | undefined"
              },
              "description": "The connotation the split button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "SplitButtonShape | undefined"
              },
              "description": "The shape the split button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "SplitButtonAppearance | undefined"
              },
              "description": "The appearance the split button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SplitButtonSize | undefined"
              },
              "description": "The size the split button should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the split button's label.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the split button's icon.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "splitIndicator",
              "type": {
                "text": "string"
              },
              "default": "'chevron-down-line'",
              "description": "Indicates the split button's icon indicator.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates if the button is disabled.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "ariaExpanded",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "SplitButtonConnotation | undefined"
              },
              "description": "The connotation the split button should have.",
              "fieldName": "connotation"
            },
            {
              "name": "shape",
              "type": {
                "text": "SplitButtonShape | undefined"
              },
              "description": "The shape the split button should have.",
              "fieldName": "shape"
            },
            {
              "name": "appearance",
              "type": {
                "text": "SplitButtonAppearance | undefined"
              },
              "description": "The appearance the split button should have.",
              "fieldName": "appearance"
            },
            {
              "name": "size",
              "type": {
                "text": "SplitButtonSize | undefined"
              },
              "description": "The size the split button should have.",
              "fieldName": "size"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the split button's label.",
              "fieldName": "label"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the split button's icon.",
              "fieldName": "icon"
            },
            {
              "name": "split-indicator",
              "type": {
                "text": "string"
              },
              "default": "'chevron-down-line'",
              "description": "Indicates the split button's icon indicator.",
              "fieldName": "splitIndicator"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates if the button is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaLabel"
            },
            {
              "name": "aria-expanded",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaExpanded"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SplitButton",
          "declaration": {
            "name": "SplitButton",
            "module": "libs/components/src/lib/split-button/split-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/switch/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "switchDefinition",
          "description": "The switch element."
        },
        {
          "kind": "variable",
          "name": "registerSwitch",
          "description": "Registers the switch elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SwitchConnotation",
          "declaration": {
            "name": "SwitchConnotation",
            "module": "./switch"
          }
        },
        {
          "kind": "js",
          "name": "switchDefinition",
          "declaration": {
            "name": "switchDefinition",
            "module": "libs/components/src/lib/switch/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerSwitch",
          "declaration": {
            "name": "registerSwitch",
            "module": "libs/components/src/lib/switch/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/switch/switch.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for switch",
          "name": "Switch",
          "cssProperties": [
            {
              "name": "--vvd-switch-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-switch-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-switch-cta-primary-increment",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-switch-cta-backdrop",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-switch-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-switch-cta-intermediate",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-switch-alert-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-switch-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-switch-alert-primary-increment",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-switch-alert-backdrop",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-switch-alert-firm",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-switch-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-switch-success-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-switch-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-switch-success-primary-increment",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-switch-success-backdrop",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-switch-success-firm",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-switch-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-switch-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-switch-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-switch-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-switch-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-switch-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-switch-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the switch's label.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "SwitchConnotation | undefined"
              },
              "description": "Indicates the switch's connotation.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the switch's label.",
              "fieldName": "label"
            },
            {
              "name": "connotation",
              "type": {
                "text": "SwitchConnotation | undefined"
              },
              "description": "Indicates the switch's connotation.",
              "fieldName": "connotation"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Switch",
          "declaration": {
            "name": "Switch",
            "module": "libs/components/src/lib/switch/switch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tab/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tabDefinition",
          "description": "The tab element."
        },
        {
          "kind": "variable",
          "name": "registerTab",
          "description": "Registers the tab elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabConnotation",
          "declaration": {
            "name": "TabConnotation",
            "module": "./tab"
          }
        },
        {
          "kind": "js",
          "name": "TabShape",
          "declaration": {
            "name": "TabShape",
            "module": "./tab"
          }
        },
        {
          "kind": "js",
          "name": "tabDefinition",
          "declaration": {
            "name": "tabDefinition",
            "module": "libs/components/src/lib/tab/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTab",
          "declaration": {
            "name": "registerTab",
            "module": "libs/components/src/lib/tab/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tab/tab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for tab",
          "name": "Tab",
          "cssProperties": [
            {
              "name": "--vvd-tab-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-tab-cta-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-tab-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-tab-cta-faint",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-tab-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-tab-cta-pale",
              "default": "var(--vvd-color-cta-300)"
            },
            {
              "name": "--vvd-tab-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-tab-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-tab-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-tab-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-tab-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            },
            {
              "name": "--vvd-tab-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            }
          ],
          "slots": [
            {
              "description": "Slot to add an icon to tab.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "TabConnotation | undefined"
              },
              "description": "The connotation the tab should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "TabShape | undefined"
              },
              "description": "The shape the tab should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the tab's label.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "any"
              },
              "default": "'-1'"
            },
            {
              "kind": "field",
              "name": "ariaSelected",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "TabConnotation | undefined"
              },
              "description": "The connotation the tab should have.",
              "fieldName": "connotation"
            },
            {
              "name": "shape",
              "type": {
                "text": "TabShape | undefined"
              },
              "description": "The shape the tab should have.",
              "fieldName": "shape"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the tab's label.",
              "fieldName": "label"
            },
            {
              "type": {
                "text": "any"
              },
              "default": "'-1'",
              "fieldName": "tabIndex"
            },
            {
              "name": "aria-selected",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaSelected"
            }
          ],
          "superclass": {
            "name": "FoundationTab",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "libs/components/src/lib/tab/tab.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tab-panel/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tabPanelDefinition",
          "description": "The tab panel element."
        },
        {
          "kind": "variable",
          "name": "registerTabPanel",
          "description": "Registers the tab-panel elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tabPanelDefinition",
          "declaration": {
            "name": "tabPanelDefinition",
            "module": "libs/components/src/lib/tab-panel/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTabPanel",
          "declaration": {
            "name": "registerTabPanel",
            "module": "libs/components/src/lib/tab-panel/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tab-panel/tab-panel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for tab-panel",
          "name": "TabPanel",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "superclass": {
            "name": "FoundationTabPanel",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "libs/components/src/lib/tab-panel/tab-panel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tabs/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tabsDefinition",
          "description": "The tabs element."
        },
        {
          "kind": "variable",
          "name": "registerTabs",
          "description": "Registers the tabs elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tabsDefinition",
          "declaration": {
            "name": "tabsDefinition",
            "module": "libs/components/src/lib/tabs/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTabs",
          "declaration": {
            "name": "registerTabs",
            "module": "libs/components/src/lib/tabs/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tabs/tabs.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ACTIVE_TAB_WIDTH",
          "type": {
            "text": "string"
          },
          "default": "'--_tabs-active-tab-inline-size'"
        },
        {
          "kind": "class",
          "description": "Base class for tabs",
          "name": "Tabs",
          "cssProperties": [
            {
              "name": "--vvd-tabs-cta-primary",
              "default": "var(--vvd-color-cta-500)"
            },
            {
              "name": "--vvd-tabs-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            }
          ],
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tablist",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "TabsConnotation | undefined"
              },
              "description": "The connotation the tabs should have.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "connotationChanged"
            },
            {
              "kind": "method",
              "name": "orientationChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "activeidChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "tabsChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "tabpanelsChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "patchIndicatorStyleTransition"
            },
            {
              "kind": "method",
              "name": "#updateTabsConnotation"
            },
            {
              "kind": "field",
              "name": "#tabListWrapper",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#scrollToIndex",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#patchActiveID"
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "TabsConnotation | undefined"
              },
              "description": "The connotation the tabs should have.",
              "fieldName": "connotation"
            }
          ],
          "superclass": {
            "name": "FoundationTabs",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ACTIVE_TAB_WIDTH",
          "declaration": {
            "name": "ACTIVE_TAB_WIDTH",
            "module": "libs/components/src/lib/tabs/tabs.ts"
          }
        },
        {
          "kind": "js",
          "name": "Tabs",
          "declaration": {
            "name": "Tabs",
            "module": "libs/components/src/lib/tabs/tabs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tag/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagDefinition",
          "description": "Represents a tag custom element.\ntag is a label that holds small amounts of information.\nA tag can be used to display unread notifications, or to label a block of text."
        },
        {
          "kind": "variable",
          "name": "registerTag",
          "description": "Registers the tag elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TagConnotation",
          "declaration": {
            "name": "TagConnotation",
            "module": "./tag"
          }
        },
        {
          "kind": "js",
          "name": "TagAppearance",
          "declaration": {
            "name": "TagAppearance",
            "module": "./tag"
          }
        },
        {
          "kind": "js",
          "name": "TagShape",
          "declaration": {
            "name": "TagShape",
            "module": "./tag"
          }
        },
        {
          "kind": "js",
          "name": "tagDefinition",
          "declaration": {
            "name": "tagDefinition",
            "module": "libs/components/src/lib/tag/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTag",
          "declaration": {
            "name": "registerTag",
            "module": "libs/components/src/lib/tag/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tag/tag.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for tag.",
          "name": "Tag",
          "cssProperties": [
            {
              "name": "--vvd-tag-cta-contrast",
              "default": "var(--vvd-color-cta-800)"
            },
            {
              "name": "--vvd-tag-cta-soft",
              "default": "var(--vvd-color-cta-100)"
            },
            {
              "name": "--vvd-tag-cta-pale",
              "default": "var(--vvd-color-cta-300)"
            },
            {
              "name": "--vvd-tag-cta-fierce",
              "default": "var(--vvd-color-cta-700)"
            },
            {
              "name": "--vvd-tag-cta-firm",
              "default": "var(--vvd-color-cta-600)"
            },
            {
              "name": "--vvd-tag-cta-faint",
              "default": "var(--vvd-color-cta-50)"
            },
            {
              "name": "--vvd-tag-cta-dim",
              "default": "var(--vvd-color-cta-200)"
            },
            {
              "name": "--vvd-tag-accent-contrast",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-tag-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-tag-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            },
            {
              "name": "--vvd-tag-accent-fierce",
              "default": "var(--vvd-color-neutral-700)"
            },
            {
              "name": "--vvd-tag-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-tag-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-tag-accent-dim",
              "default": "var(--vvd-color-neutral-200)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "connotation",
              "type": {
                "text": "TagConnotation | undefined"
              },
              "description": "The connotation the tag should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "TagShape | undefined"
              },
              "description": "The shape the tag should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "TagAppearance | undefined"
              },
              "description": "The appearance the tag should have.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the tag's label.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is removable",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is disabled",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "selectable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is selectable",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is selected",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "remove",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "#select",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleKeydown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "connotation",
              "type": {
                "text": "TagConnotation | undefined"
              },
              "description": "The connotation the tag should have.",
              "fieldName": "connotation"
            },
            {
              "name": "shape",
              "type": {
                "text": "TagShape | undefined"
              },
              "description": "The shape the tag should have.",
              "fieldName": "shape"
            },
            {
              "name": "appearance",
              "type": {
                "text": "TagAppearance | undefined"
              },
              "description": "The appearance the tag should have.",
              "fieldName": "appearance"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the tag's label.",
              "fieldName": "label"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is removable",
              "fieldName": "removable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is disabled",
              "fieldName": "disabled"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is selectable",
              "fieldName": "selectable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the tag is selected",
              "fieldName": "selected"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tag",
          "declaration": {
            "name": "Tag",
            "module": "libs/components/src/lib/tag/tag.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tag-group/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tagGroupDefinition"
        },
        {
          "kind": "variable",
          "name": "registerTagGroup",
          "description": "Registers the tag-group element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tagGroupDefinition",
          "declaration": {
            "name": "tagGroupDefinition",
            "module": "libs/components/src/lib/tag-group/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTagGroup",
          "declaration": {
            "name": "registerTagGroup",
            "module": "libs/components/src/lib/tag-group/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tag-group/tag-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for tag-group",
          "name": "TagGroup",
          "slots": [
            {
              "description": "The content of the tag-group.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            }
          ],
          "attributes": [
            {
              "name": "aria-label",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "ariaLabel"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TagGroup",
          "declaration": {
            "name": "TagGroup",
            "module": "libs/components/src/lib/tag-group/tag-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/text-anchor/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "textAnchorDefinition",
          "description": "The text-anchor element."
        },
        {
          "kind": "variable",
          "name": "registerTextAnchor",
          "description": "Registers the text-anchor elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textAnchorDefinition",
          "declaration": {
            "name": "textAnchorDefinition",
            "module": "libs/components/src/lib/text-anchor/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTextAnchor",
          "declaration": {
            "name": "registerTextAnchor",
            "module": "libs/components/src/lib/text-anchor/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/text-anchor/text-anchor.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for text-anchor",
          "name": "TextAnchor",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the text anchor's text.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the text anchor's text.",
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "Anchor",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextAnchor",
          "declaration": {
            "name": "TextAnchor",
            "module": "libs/components/src/lib/text-anchor/text-anchor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/text-area/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "textAreaDefinition",
          "description": "The text-area element."
        },
        {
          "kind": "variable",
          "name": "registerTextArea",
          "description": "Registers the text-field elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextAreaWrap",
          "declaration": {
            "name": "TextAreaWrap",
            "module": "./text-area"
          }
        },
        {
          "kind": "js",
          "name": "textAreaDefinition",
          "declaration": {
            "name": "textAreaDefinition",
            "module": "libs/components/src/lib/text-area/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTextArea",
          "declaration": {
            "name": "registerTextArea",
            "module": "libs/components/src/lib/text-area/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/text-area/text-area.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for text-area",
          "name": "TextArea",
          "cssProperties": [
            {
              "name": "--vvd-text-area-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-text-area-success-backdrop",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-text-area-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-text-area-success-firm",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-text-area-success-faint",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-text-area-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-text-area-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-text-area-alert-backdrop",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-text-area-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-text-area-alert-firm",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-text-area-alert-faint",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-text-area-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-text-area-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-text-area-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-text-area-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-text-area-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-text-area-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-text-area-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "wrap",
              "type": {
                "text": "TextAreaWrap | undefined"
              },
              "description": "The wrap attribute",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "wrap",
              "type": {
                "text": "TextAreaWrap | undefined"
              },
              "description": "The wrap attribute",
              "fieldName": "wrap"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "libs/components/src/lib/text-area/text-area.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/text-field/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "textFieldDefinition",
          "description": "The text-field element."
        },
        {
          "kind": "variable",
          "name": "registerTextField",
          "description": "Registers the text-field elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextFieldAppearance",
          "declaration": {
            "name": "TextFieldAppearance",
            "module": "./text-field"
          }
        },
        {
          "kind": "js",
          "name": "TextFieldShape",
          "declaration": {
            "name": "TextFieldShape",
            "module": "./text-field"
          }
        },
        {
          "kind": "js",
          "name": "textFieldDefinition",
          "declaration": {
            "name": "textFieldDefinition",
            "module": "libs/components/src/lib/text-field/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTextField",
          "declaration": {
            "name": "registerTextField",
            "module": "libs/components/src/lib/text-field/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/text-field/text-field.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for text-field",
          "name": "TextField",
          "cssProperties": [
            {
              "name": "--vvd-text-field-success-primary",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-text-field-success-backdrop",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-text-field-success-intermediate",
              "default": "var(--vvd-color-success-500)"
            },
            {
              "name": "--vvd-text-field-success-firm",
              "default": "var(--vvd-color-success-600)"
            },
            {
              "name": "--vvd-text-field-success-faint",
              "default": "var(--vvd-color-success-50)"
            },
            {
              "name": "--vvd-text-field-success-soft",
              "default": "var(--vvd-color-success-100)"
            },
            {
              "name": "--vvd-text-field-alert-primary",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-text-field-alert-backdrop",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-text-field-alert-intermediate",
              "default": "var(--vvd-color-alert-500)"
            },
            {
              "name": "--vvd-text-field-alert-firm",
              "default": "var(--vvd-color-alert-600)"
            },
            {
              "name": "--vvd-text-field-alert-faint",
              "default": "var(--vvd-color-alert-50)"
            },
            {
              "name": "--vvd-text-field-alert-soft",
              "default": "var(--vvd-color-alert-100)"
            },
            {
              "name": "--vvd-text-field-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-text-field-accent-backdrop",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-text-field-accent-intermediate",
              "default": "var(--vvd-color-neutral-500)"
            },
            {
              "name": "--vvd-text-field-accent-firm",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-text-field-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-text-field-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "Used to add action items to the start of the text-field.",
              "name": "leading-action-items"
            },
            {
              "description": "Used to add action items to the end of the text-field.",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "TextFieldAppearance | undefined"
              }
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "TextFieldShape | undefined"
              }
            },
            {
              "kind": "field",
              "name": "autoComplete",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "leadingActionItemsSlottedContent",
              "type": {
                "text": "HTMLElement[] | undefined"
              }
            }
          ],
          "attributes": [
            {
              "name": "appearance",
              "type": {
                "text": "TextFieldAppearance | undefined"
              },
              "fieldName": "appearance"
            },
            {
              "name": "shape",
              "type": {
                "text": "TextFieldShape | undefined"
              },
              "fieldName": "shape"
            },
            {
              "name": "autoComplete",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "autoComplete"
            }
          ],
          "superclass": {
            "name": "FoundationTextfield",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextField",
          "declaration": {
            "name": "TextField",
            "module": "libs/components/src/lib/text-field/text-field.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/toggletip/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "toggletipDefinition",
          "description": "The toggletip element."
        },
        {
          "kind": "variable",
          "name": "registerToggletip",
          "description": "Registers the toggletip element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toggletipDefinition",
          "declaration": {
            "name": "toggletipDefinition",
            "module": "libs/components/src/lib/toggletip/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerToggletip",
          "declaration": {
            "name": "registerToggletip",
            "module": "libs/components/src/lib/toggletip/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/toggletip/toggletip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for toggletip",
          "name": "Toggletip",
          "slots": [
            {
              "description": "The content to display in the toggletip.",
              "name": ""
            },
            {
              "description": "The content to display in the toggletip action items.",
              "name": "action-items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#anchorEl",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#observeMissingAnchor",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#ANCHOR_ARIA_LABEL_SUFFIX",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "' ; Show more information'"
            },
            {
              "kind": "field",
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "the optional title of the toggletip",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "alternate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "toggle color scheme",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "Placement | undefined"
              },
              "default": "'right'",
              "description": "placement of the toggletip",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "AnchorType"
              },
              "default": "''",
              "description": "id or direct reference to the toggletip's anchor element",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "anchorChanged",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "AnchorType"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "AnchorType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the toggletip is open",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "openChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setupAnchor",
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#cleanupAnchor",
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#openIfClosed",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#closeOnClickOutside",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#closeOnEscape",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "headline",
              "type": {
                "text": "string | undefined"
              },
              "description": "the optional title of the toggletip",
              "fieldName": "headline"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "toggle color scheme",
              "fieldName": "alternate"
            },
            {
              "type": {
                "text": "Placement | undefined"
              },
              "default": "'right'",
              "description": "placement of the toggletip",
              "fieldName": "placement"
            },
            {
              "type": {
                "text": "AnchorType"
              },
              "default": "''",
              "description": "id or direct reference to the toggletip's anchor element",
              "fieldName": "anchor"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "indicates whether the toggletip is open",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Toggletip",
          "declaration": {
            "name": "Toggletip",
            "module": "libs/components/src/lib/toggletip/toggletip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tooltip/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tooltipDefinition",
          "description": "The tooltip element."
        },
        {
          "kind": "variable",
          "name": "registerTooltip",
          "description": "Registers the tooltip elements with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tooltipDefinition",
          "declaration": {
            "name": "tooltipDefinition",
            "module": "libs/components/src/lib/tooltip/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTooltip",
          "declaration": {
            "name": "registerTooltip",
            "module": "libs/components/src/lib/tooltip/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tooltip/tooltip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for tooltip",
          "name": "Tooltip",
          "members": [
            {
              "kind": "field",
              "name": "#anchorEl",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the tooltip\naccepts string",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "Placement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "anchorType | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver | undefined"
              }
            },
            {
              "kind": "method",
              "name": "anchorChanged",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "anchorType"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "anchorType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#observeMissingAnchor",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#anchorUpdated",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "#show",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#hide",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#closeOnEscape",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "openChanged",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "the text of the tooltip\naccepts string",
              "fieldName": "text"
            },
            {
              "type": {
                "text": "Placement | undefined"
              },
              "fieldName": "placement"
            },
            {
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "type": {
                "text": "anchorType | undefined"
              },
              "fieldName": "anchor"
            }
          ],
          "superclass": {
            "name": "FoundationElement",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "libs/components/src/lib/tooltip/tooltip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tree-item/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "treeItemDefinition"
        },
        {
          "kind": "variable",
          "name": "registerTreeItem",
          "description": "Registers the tree-item element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "treeItemDefinition",
          "declaration": {
            "name": "treeItemDefinition",
            "module": "libs/components/src/lib/tree-item/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTreeItem",
          "declaration": {
            "name": "registerTreeItem",
            "module": "libs/components/src/lib/tree-item/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tree-item/tree-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for tree-item",
          "name": "TreeItem",
          "cssProperties": [
            {
              "name": "--vvd-tree-item-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-tree-item-accent-primary-text",
              "default": "var(--vvd-color-canvas)"
            },
            {
              "name": "--vvd-tree-item-accent-primary-increment",
              "default": "var(--vvd-color-neutral-800)"
            },
            {
              "name": "--vvd-tree-item-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-tree-item-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            }
          ],
          "slots": [
            {
              "description": "To specify a child tree item.",
              "name": "item"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the text's text.",
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Indicates the text's text.",
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "FastTreeItem",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TreeItem",
          "declaration": {
            "name": "TreeItem",
            "module": "libs/components/src/lib/tree-item/tree-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tree-view/definition.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "treeViewDefinition"
        },
        {
          "kind": "variable",
          "name": "registerTreeView",
          "description": "Registers the tree-view element with the design system.",
          "parameters": [
            {
              "description": "the prefix to use for the component name",
              "name": "prefix"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "treeViewDefinition",
          "declaration": {
            "name": "treeViewDefinition",
            "module": "libs/components/src/lib/tree-view/definition.ts"
          }
        },
        {
          "kind": "js",
          "name": "registerTreeView",
          "declaration": {
            "name": "registerTreeView",
            "module": "libs/components/src/lib/tree-view/definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/lib/tree-view/tree-view.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for Tree View",
          "name": "TreeView",
          "slots": [
            {
              "description": "Default slot.",
              "name": ""
            }
          ],
          "superclass": {
            "name": "FastTreeView",
            "package": "@microsoft/fast-foundation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TreeView",
          "declaration": {
            "name": "TreeView",
            "module": "libs/components/src/lib/tree-view/tree-view.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "libs/components/src/shared/date-picker/date-picker-base.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Base class for date-picker",
          "name": "DatePickerBase",
          "cssProperties": [
            {
              "name": "--vvd-date-picker-accent-primary",
              "default": "var(--vvd-color-canvas-text)"
            },
            {
              "name": "--vvd-date-picker-accent-faint",
              "default": "var(--vvd-color-neutral-50)"
            },
            {
              "name": "--vvd-date-picker-accent-soft",
              "default": "var(--vvd-color-neutral-100)"
            },
            {
              "name": "--vvd-date-picker-accent-dim",
              "default": "var(--vvd-color-neutral-200)"
            },
            {
              "name": "--vvd-date-picker-accent-pale",
              "default": "var(--vvd-color-neutral-300)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "string"
              },
              "description": "The earliest accepted date of the date-picker.",
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "string"
              },
              "description": "The latest accepted date of the date-picker.",
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "initialValue",
              "type": {
                "text": "string"
              },
              "description": "The initial value of the date-picker.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "currentValue",
              "type": {
                "text": "string"
              },
              "description": "The current value of the date-picker.",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "readOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date-picker is readonly.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "#getFocusableEls"
            },
            {
              "kind": "method",
              "name": "#isMonthAfterValidRange",
              "parameters": [
                {
                  "name": "month",
                  "type": {
                    "text": "Month"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#isMonthBeforeValidRange",
              "parameters": [
                {
                  "name": "month",
                  "type": {
                    "text": "Month"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#onFocusIn",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#onFocusOut",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_getCustomValidationError",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | null"
                }
              }
            },
            {
              "kind": "field",
              "name": "#dismissOnClickOutside",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#isClosingPopup",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "#openPopupIfPossible"
            },
            {
              "kind": "method",
              "name": "_getSelectedDates",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DateStr[]"
                }
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The earliest accepted date of the date-picker.",
              "default": "''",
              "fieldName": "min"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The latest accepted date of the date-picker.",
              "default": "''",
              "fieldName": "max"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The initial value of the date-picker.",
              "fieldName": "initialValue"
            },
            {
              "name": "current-value",
              "type": {
                "text": "string"
              },
              "description": "The current value of the date-picker.",
              "fieldName": "currentValue"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date-picker is readonly.",
              "fieldName": "readOnly"
            }
          ],
          "superclass": {
            "name": "FormAssociatedDatePickerBase",
            "module": "/libs/components/src/shared/date-picker/date-picker-base.form-associated"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatePickerBase",
          "declaration": {
            "name": "DatePickerBase",
            "module": "libs/components/src/shared/date-picker/date-picker-base.ts"
          }
        }
      ]
    }
  ]
}
