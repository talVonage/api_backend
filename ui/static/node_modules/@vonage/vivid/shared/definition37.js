import { a as attr, h as html, r as registerFactory } from './index.js';
import { B as BaseProgress } from './base-progress.js';
import { w as when } from './when.js';
import { c as classNames } from './class-names.js';

const styles = "/**\n * Do not edit directly\n * Generated on Tue, 17 Oct 2023 15:27:52 GMT\n */\n.base {\n  height: 6px;\n  align-items: center;\n  margin: 0;\n  outline: none;\n}\n.base:not(.connotation-pacific).connotation-cta {\n  /* @cssprop [--vvd-progress-cta-primary=var(--vvd-color-cta-500)] */\n  --_connotation-color-primary: var(--vvd-progress-cta-primary, var(--vvd-color-cta-500));\n  /* @cssprop [--vvd-progress-cta-soft=var(--vvd-color-cta-100)] */\n  --_connotation-color-soft: var(--vvd-progress-cta-soft, var(--vvd-color-cta-100));\n}\n.base:not(.connotation-pacific).connotation-alert {\n  /* @cssprop [--vvd-progress-alert-primary=var(--vvd-color-alert-500)] */\n  --_connotation-color-primary: var(--vvd-progress-alert-primary, var(--vvd-color-alert-500));\n  /* @cssprop [--vvd-progress-alert-soft=var(--vvd-color-alert-100)] */\n  --_connotation-color-soft: var(--vvd-progress-alert-soft, var(--vvd-color-alert-100));\n}\n.base:not(.connotation-pacific).connotation-success {\n  /* @cssprop [--vvd-progress-success-primary=var(--vvd-color-success-500)] */\n  --_connotation-color-primary: var(--vvd-progress-success-primary, var(--vvd-color-success-500));\n  /* @cssprop [--vvd-progress-success-soft=var(--vvd-color-success-100)] */\n  --_connotation-color-soft: var(--vvd-progress-success-soft, var(--vvd-color-success-100));\n}\n.base:not(.connotation-pacific):not(.connotation-cta, .connotation-alert, .connotation-success) {\n  /* @cssprop [--vvd-progress-accent-primary=var(--vvd-color-canvas-text)] */\n  --_connotation-color-primary: var(--vvd-progress-accent-primary, var(--vvd-color-canvas-text));\n  /* @cssprop [--vvd-progress-accent-soft=var(--vvd-color-neutral-100)] */\n  --_connotation-color-soft: var(--vvd-progress-accent-soft, var(--vvd-color-neutral-100));\n}\n.base:not(.connotation-pacific) {\n  --_appearance-color-text: var(--_connotation-color-contrast);\n  --_appearance-color-fill: var(--_connotation-color-soft);\n  --_appearance-color-outline: transparent;\n}\n.base.connotation-pacific {\n  --_connotation-color-primary: linear-gradient(to right, var(--vvd-color-information-200), var(--vvd-color-cta-600));\n}\n\n.progress {\n  position: relative;\n  display: flex;\n  overflow: hidden;\n  align-items: center;\n  block-size: 100%;\n  inline-size: 100%;\n  /* Shape */\n}\n.base:not(.connotation-pacific) .progress {\n  background-color: var(--_appearance-color-fill);\n}\n.base.connotation-pacific .progress {\n  background-color: var(--vvd-color-neutral-100);\n}\n.base:not(.shape-sharp) .progress {\n  border-radius: 3px;\n}\n\n.indeterminate {\n  display: flex;\n  background-color: var(--_connotation-color-primary);\n  block-size: 100%;\n  border-radius: inherit;\n  inline-size: 100%;\n}\n\n.determinate {\n  background-color: var(--_connotation-color-primary);\n  block-size: 100%;\n  border-radius: inherit;\n  transition: all 0.2s ease-in-out;\n}\n.connotation-pacific .determinate {\n  background-image: var(--_connotation-color-primary);\n}\n.reverse .determinate {\n  position: absolute;\n  right: 0;\n}\n.paused .determinate {\n  background: var(--vvd-color-neutral-300);\n}\n\n.indicator-1 {\n  animation: indeterminate-1 2s infinite;\n  inline-size: 30%;\n}\n\n.indicator-2 {\n  animation: indeterminate-2 2s infinite;\n  inline-size: 60%;\n}\n\n.indicator-1,\n.indicator-2 {\n  position: absolute;\n  animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);\n  background-color: var(--vvd-color-neutral-100);\n  block-size: 100%;\n  opacity: 0;\n}\n.connotation-pacific .indicator-1,\n.connotation-pacific .indicator-2 {\n  background-image: var(--_connotation-color-primary);\n}\n.paused .indicator-1,\n.paused .indicator-2 {\n  animation-play-state: paused;\n  background-color: var(--_connotation-color-primary);\n}\n.reverse .indicator-1,\n.reverse .indicator-2 {\n  animation-direction: reverse;\n}\n\n@keyframes indeterminate-1 {\n  0% {\n    opacity: 1;\n    transform: translateX(-100%);\n  }\n  70% {\n    opacity: 1;\n    transform: translateX(300%);\n  }\n  70.01% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0;\n    transform: translateX(300%);\n  }\n}\n@keyframes indeterminate-2 {\n  0% {\n    opacity: 0;\n    transform: translateX(-150%);\n  }\n  29.99% {\n    opacity: 0;\n  }\n  30% {\n    opacity: 1;\n    transform: translateX(-150%);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(166.66%);\n  }\n}";

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class Progress extends BaseProgress {
  constructor() {
    super(...arguments);
    this.reverse = false;
  }
}
__decorateClass([
  attr()
], Progress.prototype, "shape", 2);
__decorateClass([
  attr()
], Progress.prototype, "connotation", 2);
__decorateClass([
  attr({ mode: "boolean" })
], Progress.prototype, "reverse", 2);

const getClasses = ({
  connotation,
  shape,
  reverse,
  paused
}) => classNames(
  "base",
  [`connotation-${connotation}`, Boolean(connotation)],
  [`shape-${shape}`, Boolean(shape)],
  ["reverse", Boolean(reverse)],
  ["paused", Boolean(paused)]
);
function determinate() {
  return html`
		<span class="determinate" style="width: ${(x) => x.percentComplete}%"></span>`;
}
function indeterminate() {
  return html`
		<span class="indeterminate" name="indeterminate">
			<span class="indicator-1"></span>
			<span class="indicator-2"></span>
		 </span>`;
}
const ProgressTemplate = (_) => {
  return html`
    <div
      role="progressbar"
	  aria-label="${(x) => x.ariaLabel}"
      aria-valuenow="${(x) => x.value}"
      aria-valuemin="${(x) => x.min}"
      aria-valuemax="${(x) => x.max}"
      class="${getClasses}"
    >
		<div class="progress">
		  ${when((x) => typeof x.value === "number", determinate())}
		  ${when((x) => typeof x.value !== "number", indeterminate())}
    	</div>
	</div>
  `;
};

const progressDefinition = Progress.compose({
  baseName: "progress",
  template: ProgressTemplate,
  styles
});
const progressRegistries = [progressDefinition()];
const registerProgress = registerFactory(progressRegistries);

export { progressRegistries as a, progressDefinition as p, registerProgress as r };
