import { h as html, r as registerFactory } from './index.js';
import { f as focusRegistries } from './definition56.js';
import { R as Radio } from './radio.js';
import { f as focusTemplateFactory } from './focus2.js';
import { w as when } from './when.js';
import { c as classNames } from './class-names.js';

const styles = "/**\n * Do not edit directly\n * Generated on Tue, 17 Oct 2023 15:27:52 GMT\n */\n@supports selector(:focus-visible) {\n  :host(:focus-visible) {\n    outline: none;\n  }\n}\n:host([disabled]) {\n  cursor: not-allowed;\n}\n\n.base {\n  display: inline-flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 8px;\n}\n.base.connotation-cta {\n  /* @cssprop [--vvd-radio-cta-primary=var(--vvd-color-cta-500)] */\n  --_connotation-color-primary: var(--vvd-radio-cta-primary, var(--vvd-color-cta-500));\n  /* @cssprop [--vvd-radio-cta-primary-text=var(--vvd-color-canvas)] */\n  --_connotation-color-primary-text: var(--vvd-radio-cta-primary-text, var(--vvd-color-canvas));\n  /* @cssprop [--vvd-radio-cta-primary-increment=var(--vvd-color-cta-600)] */\n  --_connotation-color-primary-increment: var(--vvd-radio-cta-primary-increment, var(--vvd-color-cta-600));\n  /* @cssprop [--vvd-radio-cta-intermediate=var(--vvd-color-cta-500)] */\n  --_connotation-color-intermediate: var(--vvd-radio-cta-intermediate, var(--vvd-color-cta-500));\n  /* @cssprop [--vvd-radio-cta-backdrop=var(--vvd-color-cta-50)] */\n  --_connotation-color-backdrop: var(--vvd-radio-cta-backdrop, var(--vvd-color-cta-50));\n  /* @cssprop [--vvd-radio-cta-firm=var(--vvd-color-cta-600)] */\n  --_connotation-color-firm: var(--vvd-radio-cta-firm, var(--vvd-color-cta-600));\n}\n.base:not(.connotation-cta) {\n  /* @cssprop [--vvd-radio-accent-primary=var(--vvd-color-canvas-text)] */\n  --_connotation-color-primary: var(--vvd-radio-accent-primary, var(--vvd-color-canvas-text));\n  /* @cssprop [--vvd-radio-accent-primary-text=var(--vvd-color-canvas)] */\n  --_connotation-color-primary-text: var(--vvd-radio-accent-primary-text, var(--vvd-color-canvas));\n  /* @cssprop [--vvd-radio-accent-primary-increment=var(--vvd-color-neutral-800)] */\n  --_connotation-color-primary-increment: var(--vvd-radio-accent-primary-increment, var(--vvd-color-neutral-800));\n  /* @cssprop [--vvd-radio-accent-intermediate=var(--vvd-color-neutral-500)] */\n  --_connotation-color-intermediate: var(--vvd-radio-accent-intermediate, var(--vvd-color-neutral-500));\n  /* @cssprop [--vvd-radio-accent-backdrop=var(--vvd-color-canvas)] */\n  --_connotation-color-backdrop: var(--vvd-radio-accent-backdrop, var(--vvd-color-canvas));\n  /* @cssprop [--vvd-radio-accent-firm=var(--vvd-color-canvas-text)] */\n  --_connotation-color-firm: var(--vvd-radio-accent-firm, var(--vvd-color-canvas-text));\n}\n.base {\n  --_appearance-color-text: var(--vvd-color-canvas-text);\n  --_appearance-color-fill: var(--_connotation-color-backdrop);\n  --_appearance-color-outline: var(--_connotation-color-intermediate);\n}\n.base:where(:hover, .hover):where(:not(:disabled, .disabled, .readonly)) {\n  --_appearance-color-text: var(--vvd-color-canvas-text);\n  --_appearance-color-fill: var(--_connotation-color-backdrop);\n  --_appearance-color-outline: var(--_connotation-color-firm);\n}\n.base:where(:checked, .checked):where(:not(:disabled, .disabled)) {\n  --_appearance-color-text: var(--_connotation-color-primary-text);\n  --_appearance-color-fill: var(--_connotation-color-primary);\n  --_appearance-color-outline: var(--_connotation-color-primary);\n}\n.base:where(:checked, .checked):where(:hover, .hover) {\n  --_appearance-color-text: var(--_connotation-color-primary-text);\n  --_appearance-color-fill: var(--_connotation-color-primary-increment);\n  --_appearance-color-outline: var(--_connotation-color-primary);\n}\n.base:where(:disabled, .disabled) {\n  --_appearance-color-text: var(--vvd-color-neutral-300);\n  --_appearance-color-fill: var(--vvd-color-neutral-100);\n  --_appearance-color-outline: var(--vvd-color-neutral-300);\n}\n.base:where(.readonly):where(:not(:disabled, .disabled)) {\n  --_appearance-color-text: var(--vvd-color-canvas-text);\n  --_appearance-color-fill: var(--vvd-color-neutral-200);\n  --_appearance-color-outline: var(--vvd-color-neutral-400);\n}\n@supports (user-select: none) {\n  .base {\n    user-select: none;\n  }\n}\n.base.disabled {\n  pointer-events: none;\n}\n\n.control {\n  position: relative;\n  flex-shrink: 0;\n  block-size: calc(1px * (40 + 4 * clamp(-1, var(--vvd-size-density, 0), 2) - 20));\n  border-radius: 50%;\n  box-shadow: inset 0 0 0 2px var(--_appearance-color-outline);\n  inline-size: calc(1px * (40 + 4 * clamp(-1, var(--vvd-size-density, 0), 2) - 20));\n}\n.base:not(.checked) .control {\n  background-color: var(--_appearance-color-fill);\n}\n.control::after {\n  position: absolute;\n  background-color: var(--_appearance-color-outline);\n  border-radius: inherit;\n  content: \"\";\n  inset: 5px;\n  opacity: 1;\n  transition: opacity 0.2s;\n}\n.base:not(.checked) .control::after {\n  opacity: 0;\n}\n\nlabel {\n  color: var(--vvd-color-canvas-text);\n  cursor: pointer;\n  font: var(--vvd-typography-base);\n}\n\n.focus-indicator {\n  --focus-inset: -3px;\n  --focus-stroke-gap-color: transparent;\n  border-radius: 50%;\n}\n:host(:not(:focus-visible)) .focus-indicator {\n  display: none;\n}";

const getClasses = ({ connotation, checked, readOnly, disabled }) => classNames(
  "base",
  [`connotation-${connotation}`, Boolean(connotation)],
  ["checked", Boolean(checked)],
  ["readonly", Boolean(readOnly)],
  ["disabled", Boolean(disabled)]
);
const RadioTemplate = (context) => {
  const focusTemplate = focusTemplateFactory(context);
  return html`
	<div class="${getClasses}"
		role="radio"
		aria-checked="${(x) => x.checked}"
		aria-required="${(x) => x.required}"
		aria-disabled="${(x) => x.disabled}"
		@keypress="${(x, c) => x.keypressHandler(c.event)}"
		@click="${(x, c) => x.clickHandler(c.event)}"
	>
		<div class="control">
			${() => focusTemplate}
		</div>
		${when((x) => x.label, html`<label class="label">${(x) => x.label}</label>`)}
	</div>
	`;
};

const radioDefinition = Radio.compose({
  baseName: "radio",
  template: RadioTemplate,
  styles
});
const radioRegistries = [radioDefinition(), ...focusRegistries];
const registerRadio = registerFactory(radioRegistries);

export { radioRegistries as a, registerRadio as b, radioDefinition as r };
