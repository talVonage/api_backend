import { h as html, r as registerFactory } from '../shared/index.js';
import { f as focusRegistries } from '../shared/definition56.js';
import { a as listboxOptionRegistries } from '../shared/definition34.js';
import { L as ListboxElement, a as Listbox } from '../shared/listbox.js';
import '../shared/affix.js';
import { f as focusTemplateFactory } from '../shared/focus2.js';
import '../shared/index2.js';
import { s as slotted } from '../shared/slotted.js';
import { c as classNames } from '../shared/class-names.js';
import '../shared/focus.js';
import '../shared/definition25.js';
import '../shared/icon.js';
import '../shared/_has.js';
import '../shared/when.js';
import '../shared/aria-global.js';
import '../shared/start-end.js';
import '../shared/ref.js';
import '../shared/apply-mixins.js';
import '../shared/dom.js';
import '../shared/key-codes.js';
import '../shared/strings.js';
import '../shared/numbers.js';
import '../locales/en-US.js';

const getClasses = ({ appearance, shape, disabled, orientation }) => classNames(
  "base",
  ["disabled", disabled],
  [`appearance-${appearance}`, Boolean(appearance)],
  [`shape-${shape}`, Boolean(shape) && orientation === "horizontal"],
  [`orientation-${orientation}`, Boolean(orientation)]
);
const ListboxTemplate = (context) => {
  const focusTemplate = focusTemplateFactory(context);
  return html`
<template
	aria-activedescendant="${(x) => x.ariaActiveDescendant}"
	aria-multiselectable="${(x) => x.ariaMultiSelectable}"
	aria-orientation="${(x) => x.ariaOrientation}"
	aria-label="listbox"
	role="listbox"
	@click="${(x, c) => x.clickHandler(c.event)}"
	@focusin="${(x, c) => x.focusinHandler(c.event)}"
	@keydown="${(x, c) => x.keydownHandler(c.event)}"
	@mousedown="${(x, c) => x.mousedownHandler(c.event)}"
	tabindex="${(x) => !x.disabled ? "0" : null}"
>
	<div
		class="${getClasses}"
	>
		${() => focusTemplate}

		<slot
			${slotted({
    filter: ListboxElement.slottedOptionFilter,
    flatten: true,
    property: "slottedOptions"
  })}
		></slot>
	</div>
</template>
	`;
};

const styles = "/**\n * Do not edit directly\n * Generated on Tue, 17 Oct 2023 15:27:52 GMT\n */\n:host {\n  display: inline-block;\n  inline-size: fit-content;\n}\n\n:host(:focus-within) {\n  outline: none;\n}\n\n:host([disabled]) {\n  cursor: not-allowed;\n}\n\n.base {\n  position: relative;\n  display: inline-flex;\n  box-sizing: border-box;\n  padding: 4px;\n  background-color: var(--_appearance-color-fill);\n  border-radius: var(--_listbox-border-radius);\n  box-shadow: inset 0 0 0 1px var(--_appearance-color-outline);\n  contain: paint;\n  gap: 4px;\n  inline-size: 100%;\n}\n.base {\n  /* @cssprop [--vvd-listbox-accent-backdrop=var(--vvd-color-canvas)] */\n  --_connotation-color-backdrop: var(--vvd-listbox-accent-backdrop, var(--vvd-color-canvas));\n  /* @cssprop [--vvd-listbox-accent-intermediate=var(--vvd-color-neutral-500)] */\n  --_connotation-color-intermediate: var(--vvd-listbox-accent-intermediate, var(--vvd-color-neutral-500));\n  /* @cssprop [--vvd-listbox-accent-primary=var(--vvd-color-canvas-text)] */\n  --_connotation-color-primary: var(--vvd-listbox-accent-primary, var(--vvd-color-canvas-text));\n  /* @cssprop [--vvd-listbox-accent-soft=var(--vvd-color-neutral-100)] */\n  --_connotation-color-soft: var(--vvd-listbox-accent-soft, var(--vvd-color-neutral-100));\n}\n.base {\n  --_appearance-color-text: var(--vvd-color-canvas-text);\n  --_appearance-color-fill: var(--_connotation-color-backdrop);\n  --_appearance-color-outline: var(--_connotation-color-intermediate);\n}\n.base.appearance-ghost {\n  --_appearance-color-text: var(--_connotation-color-primary);\n  --_appearance-color-fill: transparent;\n  --_appearance-color-outline: transparent;\n}\n.base:where(:disabled, .disabled) {\n  --_appearance-color-text: var(--vvd-color-neutral-300);\n  --_appearance-color-fill: var(--vvd-color-neutral-100);\n  --_appearance-color-outline: var(--vvd-color-neutral-300);\n}\n.base:where(:disabled, .disabled).appearance-ghost {\n  --_appearance-color-text: var(--vvd-color-neutral-300);\n  --_appearance-color-fill: transparent;\n  --_appearance-color-outline: transparent;\n}\n.base:not(.orientation-horizontal) {\n  flex-direction: column;\n}\n\n.focus-indicator {\n  pointer-events: none;\n}\n:host(:not(:focus-within)) .focus-indicator {\n  display: none;\n}\n\n/* Shape */\n.base:not(.shape-pill) {\n  --_listbox-border-radius: 6px;\n}\n\n.base.shape-pill {\n  --_listbox-border-radius: 24px;\n}\n\n::slotted([role=option]) {\n  border-radius: var(--_listbox-border-radius);\n  contain: content;\n}\n\n.base.disabled ::slotted([role=option]) {\n  --_option-appearance-color-text: var(--_appearance-color-outline);\n  pointer-events: none;\n}";

const listboxDefinition = Listbox.compose({
  baseName: "listbox",
  template: ListboxTemplate,
  styles
});
const listboxRegistries = [listboxDefinition(), ...listboxOptionRegistries, ...focusRegistries];
const registerListbox = registerFactory(listboxRegistries);

registerListbox();
