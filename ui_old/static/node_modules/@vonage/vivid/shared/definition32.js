import { F as FoundationElement, a as attr, h as html, r as registerFactory } from './index.js';
import { a as iconRegistries } from './definition25.js';
import { A as AffixIcon, a as affixIconTemplateFactory, I as IconWrapper } from './affix.js';
import './index2.js';
import { a as applyMixins } from './apply-mixins.js';
import { w as when } from './when.js';
import { c as classNames } from './class-names.js';

const styles = "/**\n * Do not edit directly\n * Generated on Tue, 17 Oct 2023 15:27:52 GMT\n */\n.base {\n  display: flex;\n  align-items: flex-start;\n  padding: calc(1px * (40 + 4 * clamp(-1, var(--vvd-size-density, 0), 2) - 20));\n  background-color: var(--_appearance-color-fill);\n  border-radius: 6px;\n  box-shadow: inset 0 0 0 1px var(--_appearance-color-outline);\n  color: var(--_appearance-color-text);\n  column-gap: 16px;\n}\n.base.connotation-success {\n  /* @cssprop [--vvd-note-success-primary=var(--vvd-color-success-500)] */\n  --_connotation-color-primary: var(--vvd-note-success-primary, var(--vvd-color-success-500));\n  /* @cssprop [--vvd-note-success-intermediate=var(--vvd-color-success-500)] */\n  --_connotation-color-intermediate: var(--vvd-note-success-intermediate, var(--vvd-color-success-500));\n  /* @cssprop [--vvd-note-success-backdrop=var(--vvd-color-success-50)] */\n  --_connotation-color-backdrop: var(--vvd-note-success-backdrop, var(--vvd-color-success-50));\n}\n.base.connotation-information {\n  /* @cssprop [--vvd-note-information-primary=var(--vvd-color-information-500)] */\n  --_connotation-color-primary: var(--vvd-note-information-primary, var(--vvd-color-information-500));\n  /* @cssprop [--vvd-note-information-intermediate=var(--vvd-color-information-500)] */\n  --_connotation-color-intermediate: var(--vvd-note-information-intermediate, var(--vvd-color-information-500));\n  /* @cssprop [--vvd-note-information-backdrop=var(--vvd-color-information-50)] */\n  --_connotation-color-backdrop: var(--vvd-note-information-backdrop, var(--vvd-color-information-50));\n}\n.base.connotation-alert {\n  /* @cssprop [--vvd-note-alert-primary=var(--vvd-color-alert-500)] */\n  --_connotation-color-primary: var(--vvd-note-alert-primary, var(--vvd-color-alert-500));\n  /* @cssprop [--vvd-note-alert-intermediate=var(--vvd-color-alert-500)] */\n  --_connotation-color-intermediate: var(--vvd-note-alert-intermediate, var(--vvd-color-alert-500));\n  /* @cssprop [--vvd-note-alert-backdrop=var(--vvd-color-alert-50)] */\n  --_connotation-color-backdrop: var(--vvd-note-alert-backdrop, var(--vvd-color-alert-50));\n}\n.base.connotation-warning {\n  /* @cssprop [--vvd-note-warning-primary=var(--vvd-color-warning-300)] */\n  --_connotation-color-primary: var(--vvd-note-warning-primary, var(--vvd-color-warning-300));\n  /* @cssprop [--vvd-note-warning-intermediate=var(--vvd-color-warning-300)] */\n  --_connotation-color-intermediate: var(--vvd-note-warning-intermediate, var(--vvd-color-warning-300));\n  /* @cssprop [--vvd-note-warning-backdrop=var(--vvd-color-warning-50)] */\n  --_connotation-color-backdrop: var(--vvd-note-warning-backdrop, var(--vvd-color-warning-50));\n}\n.base:not(.connotation-success, .connotation-information, .connotation-alert, .connotation-warning) {\n  /* @cssprop [--vvd-note-accent-primary=var(--vvd-color-canvas-text)] */\n  --_connotation-color-primary: var(--vvd-note-accent-primary, var(--vvd-color-canvas-text));\n  /* @cssprop [--vvd-note-accent-intermediate=var(--vvd-color-neutral-500)] */\n  --_connotation-color-intermediate: var(--vvd-note-accent-intermediate, var(--vvd-color-neutral-500));\n  /* @cssprop [--vvd-note-accent-backdrop=var(--vvd-color-canvas)] */\n  --_connotation-color-backdrop: var(--vvd-note-accent-backdrop, var(--vvd-color-canvas));\n}\n.base {\n  --_appearance-color-text: var(--vvd-color-canvas-text);\n  --_appearance-color-fill: var(--_connotation-color-backdrop);\n  --_appearance-color-outline: var(--_connotation-color-intermediate);\n}\n@supports (contain: content) {\n  .base {\n    contain: content;\n  }\n}\n@supports not (contain: content) {\n  .base {\n    overflow: hidden;\n  }\n}\n\nslot[name=icon] {\n  color: var(--_appearance-color-outline);\n  font-size: calc(1px * (40 + 4 * clamp(-1, var(--vvd-size-density, 0), 2) - 16));\n}\n\n.text {\n  display: flex;\n  min-height: 24px;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 4px;\n  text-align: start;\n}\n.text .headline {\n  font: var(--vvd-typography-base-bold);\n}\n.text .message {\n  font: var(--vvd-typography-base);\n}";

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class Note extends FoundationElement {
}
__decorateClass([
  attr
], Note.prototype, "headline", 2);
__decorateClass([
  attr
], Note.prototype, "connotation", 2);
applyMixins(Note, AffixIcon);

const getClasses = ({ connotation }) => classNames(
  "base",
  `connotation-${connotation}`
);
function getHeaderTemplate() {
  return html`<div class="headline">${(x) => x.headline}</div>`;
}
const NoteTemplate = (context) => {
  const affixIconTemplate = affixIconTemplateFactory(context);
  return html`
    <div class="${getClasses}">
			${(x) => affixIconTemplate(x.icon, IconWrapper.Slot)}
			<div class="text">
	        ${when((x) => x.headline, getHeaderTemplate())}
			    <slot class="message"></slot>
			</div>
    </div>
`;
};

const noteDefinition = Note.compose({
  baseName: "note",
  template: NoteTemplate,
  styles
});
const noteRegistries = [noteDefinition(), ...iconRegistries];
const registerNote = registerFactory(noteRegistries);

export { noteRegistries as a, noteDefinition as n, registerNote as r };
