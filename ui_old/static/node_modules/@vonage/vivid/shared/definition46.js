import { F as FoundationElement, _ as __decorate, a as attr, h as html, r as registerFactory } from './index.js';
import { a as iconRegistries } from './definition25.js';
import { f as focusRegistries } from './definition56.js';
import { b as AffixIconWithTrailing, a as affixIconTemplateFactory, I as IconWrapper } from './affix.js';
import { a as applyMixins } from './apply-mixins.js';
import { f as focusTemplateFactory } from './focus2.js';
import { c as classNames } from './class-names.js';

/**
 * A Tab Component to be used with {@link @microsoft/fast-foundation#(Tabs:class)}
 *
 * @slot - The default slot for the tab content
 *
 * @public
 */
let Tab$1 = class Tab extends FoundationElement {
};
__decorate([
    attr({ mode: "boolean" })
], Tab$1.prototype, "disabled", void 0);

const styles = "/**\n * Do not edit directly\n * Generated on Tue, 17 Oct 2023 15:27:52 GMT\n */\n@supports selector(:focus-visible) {\n  :host(:focus-visible) {\n    outline: none;\n  }\n}\n:host(.vertical) {\n  justify-content: end;\n  grid-column: 1/auto;\n}\n\n:host([disabled]) {\n  cursor: not-allowed;\n}\n\n.base {\n  position: relative;\n  display: flex;\n  box-sizing: border-box;\n  align-items: center;\n  padding: var(--_tabs-tablist-gutter);\n  background-color: var(--_appearance-color-fill);\n  box-shadow: inset 0 0 0 1px var(--_appearance-color-outline);\n  color: var(--_appearance-color-text);\n  font: var(--vvd-typography-base-bold);\n  gap: var(--_tabs-tablist-gutter);\n  min-block-size: 40px;\n  vertical-align: middle;\n  white-space: nowrap;\n}\n.base {\n  --_appearance-color-text: var(--_connotation-color-primary);\n  --_appearance-color-fill: transparent;\n  --_appearance-color-outline: transparent;\n}\n.base:where(:hover, .hover):where(:not(:disabled, .disabled, .readonly)) {\n  --_appearance-color-text: var(--_connotation-color-primary);\n  --_appearance-color-fill: var(--_connotation-color-faint);\n  --_appearance-color-outline: transparent;\n}\n.base:where(:disabled, .disabled) {\n  --_appearance-color-text: var(--vvd-color-neutral-300);\n  --_appearance-color-fill: transparent;\n  --_appearance-color-outline: transparent;\n}\n.base:where(:active, .active):where(:not(:disabled, .disabled)) {\n  --_appearance-color-text: var(--_connotation-color-primary);\n  --_appearance-color-fill: var(--_connotation-color-soft);\n  --_appearance-color-outline: transparent;\n}\n.base.connotation-cta {\n  /* @cssprop [--vvd-tab-cta-primary=var(--vvd-color-cta-500)] */\n  --_connotation-color-primary: var(--vvd-tab-cta-primary, var(--vvd-color-cta-500));\n  /* @cssprop [--vvd-tab-cta-primary-text=var(--vvd-color-canvas)] */\n  --_connotation-color-primary-text: var(--vvd-tab-cta-primary-text, var(--vvd-color-canvas));\n  /* @cssprop [--vvd-tab-cta-firm=var(--vvd-color-cta-600)] */\n  --_connotation-color-firm: var(--vvd-tab-cta-firm, var(--vvd-color-cta-600));\n  /* @cssprop [--vvd-tab-cta-faint=var(--vvd-color-cta-50)] */\n  --_connotation-color-faint: var(--vvd-tab-cta-faint, var(--vvd-color-cta-50));\n  /* @cssprop [--vvd-tab-cta-fierce=var(--vvd-color-cta-700)] */\n  --_connotation-color-fierce: var(--vvd-tab-cta-fierce, var(--vvd-color-cta-700));\n  /* @cssprop [--vvd-tab-cta-pale=var(--vvd-color-cta-300)] */\n  --_connotation-color-pale: var(--vvd-tab-cta-pale, var(--vvd-color-cta-300));\n}\n.base:not(.connotation-cta) {\n  /* @cssprop [--vvd-tab-accent-primary=var(--vvd-color-canvas-text)] */\n  --_connotation-color-primary: var(--vvd-tab-accent-primary, var(--vvd-color-canvas-text));\n  /* @cssprop [--vvd-tab-accent-primary-text=var(--vvd-color-canvas)] */\n  --_connotation-color-primary-text: var(--vvd-tab-accent-primary-text, var(--vvd-color-canvas));\n  /* @cssprop [--vvd-tab-accent-firm=var(--vvd-color-canvas-text)] */\n  --_connotation-color-firm: var(--vvd-tab-accent-firm, var(--vvd-color-canvas-text));\n  /* @cssprop [--vvd-tab-accent-faint=var(--vvd-color-neutral-50)] */\n  --_connotation-color-faint: var(--vvd-tab-accent-faint, var(--vvd-color-neutral-50));\n  /* @cssprop [--vvd-tab-accent-fierce=var(--vvd-color-neutral-700)] */\n  --_connotation-color-fierce: var(--vvd-tab-accent-fierce, var(--vvd-color-neutral-700));\n  /* @cssprop [--vvd-tab-accent-pale=var(--vvd-color-neutral-300)] */\n  --_connotation-color-pale: var(--vvd-tab-accent-pale, var(--vvd-color-neutral-300));\n}\n@supports (user-select: none) {\n  .base {\n    user-select: none;\n  }\n}\n.base:not(.shape-sharp) {\n  border-radius: 6px;\n}\n.base:not(.disabled) {\n  cursor: pointer;\n}\n.base.disabled {\n  pointer-events: none;\n}\n:host(.vertical) .base {\n  padding-inline-start: calc(var(--_tabs-active-indicator-stroke-width) + var(--_tabs-tablist-gutter));\n}\n\n.focus-indicator {\n  --focus-stroke-gap-color: transparent;\n}\n:host(:not(:focus-visible)) .focus-indicator {\n  display: none;\n}\n\nslot[name=icon] {\n  font-size: 20px;\n  line-height: 1;\n}\n.icon-trailing slot[name=icon] {\n  display: inline-block;\n  order: 1;\n  margin-inline-start: auto;\n}\n\n:host(:not(.vertical)) .base::after {\n  position: absolute;\n  background: currentColor;\n  block-size: 2px;\n  border-radius: 2px;\n  content: \"\";\n  inline-size: 100%;\n  inset-block-end: 0;\n  inset-inline-start: 0;\n  pointer-events: none;\n  transition-property: opacity;\n}\n:host(:not(.vertical)):host([aria-selected=true]) .base::after {\n  transition-delay: 0.2s;\n}\n:host(:not(.vertical)):host(:not([aria-selected=true])) .base::after {\n  opacity: 0;\n}";

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class Tab extends Tab$1 {
  constructor() {
    super(...arguments);
    this.tabIndex = "-1";
    this.ariaSelected = null;
  }
}
__decorateClass([
  attr
], Tab.prototype, "connotation", 2);
__decorateClass([
  attr
], Tab.prototype, "shape", 2);
__decorateClass([
  attr
], Tab.prototype, "label", 2);
__decorateClass([
  attr({ mode: "fromView" })
], Tab.prototype, "tabIndex", 2);
__decorateClass([
  attr({ attribute: "aria-selected" })
], Tab.prototype, "ariaSelected", 2);
applyMixins(Tab, AffixIconWithTrailing);

const getClasses = ({
  connotation,
  disabled,
  ariaSelected,
  iconTrailing,
  shape
}) => classNames(
  "base",
  [`connotation-${connotation}`, Boolean(connotation) && ariaSelected === "true"],
  [`shape-${shape}`, Boolean(shape)],
  ["disabled", Boolean(disabled)],
  ["selected", ariaSelected === "true"],
  ["icon-trailing", iconTrailing]
);
function TabTemplate(context) {
  const affixIconTemplate = affixIconTemplateFactory(context);
  const focusTemplate = focusTemplateFactory(context);
  return html`
	<template slot="tab" role="tab" aria-disabled="${(x) => x.disabled}" aria-selected="${(x) => x.ariaSelected}">
		<div class="${getClasses}" >
      ${() => focusTemplate}
			${(x) => affixIconTemplate(x.icon, IconWrapper.Slot)}
      ${(x) => x.label}
		</div>
	</template>`;
}

const tabDefinition = Tab.compose({
  baseName: "tab",
  template: TabTemplate,
  styles
});
const tabRegistries = [tabDefinition(), ...iconRegistries, ...focusRegistries];
const registerTab = registerFactory(tabRegistries);

export { tabRegistries as a, registerTab as r, tabDefinition as t };
