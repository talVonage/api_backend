import { a as attr, F as FoundationElement, h as html, r as registerFactory } from './index.js';
import { c as classNames } from './class-names.js';

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};
class Elevation extends FoundationElement {
}
__decorateClass([
  attr
], Elevation.prototype, "dp", 2);
__decorateClass([
  attr({ attribute: "no-shadow", mode: "boolean" })
], Elevation.prototype, "noShadow", 2);

const styles = ":host {\n  display: contents;\n}\n\n.control {\n  display: contents;\n}\n.control.dp-0 {\n  --_elevation-fill: var(--vvd-color-surface-0dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-0dp);\n}\n.control.dp-4 {\n  --_elevation-fill: var(--vvd-color-surface-4dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-4dp);\n}\n.control.dp-8 {\n  --_elevation-fill: var(--vvd-color-surface-8dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-8dp);\n}\n.control.dp-12 {\n  --_elevation-fill: var(--vvd-color-surface-12dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-12dp);\n}\n.control.dp-16 {\n  --_elevation-fill: var(--vvd-color-surface-16dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-16dp);\n}\n.control.dp-24 {\n  --_elevation-fill: var(--vvd-color-surface-24dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-24dp);\n}\n.control:not(.dp-0, .dp-4, .dp-8, .dp-12, .dp-16, .dp-24) {\n  --_elevation-fill: var(--vvd-color-surface-2dp);\n  --_elevation-shadow: var(--vvd-shadow-surface-2dp);\n}\n.control ::slotted(*) {\n  position: relative;\n  isolation: isolate;\n}\n.control ::slotted(*)::before {\n  position: absolute;\n  z-index: -1;\n  background: var(--_elevation-fill);\n  block-size: 100%;\n  border-radius: inherit;\n  content: \"\";\n  filter: var(--_elevation-shadow);\n  inline-size: 100%;\n  inset-block-start: 0;\n  inset-inline-start: 0;\n  transition: background-color 0.15s linear, filter 0.15s linear;\n}\n.control.no-shadow ::slotted(*)::before {\n  filter: none;\n}";

const getClasses = ({
  dp,
  noShadow
}) => classNames(
  "control",
  [`dp-${dp}`, Boolean(dp)],
  ["no-shadow", Boolean(noShadow)]
);
const elevationTemplate = () => html`
        <div class="${getClasses}" part="base">
			<slot></slot>
		</div>`;

const elevationDefinition = Elevation.compose({
  baseName: "elevation",
  template: elevationTemplate,
  styles
});
const elevationRegistries = [elevationDefinition()];
const registerElevation = registerFactory(elevationRegistries);

export { Elevation as E, elevationRegistries as e, registerElevation as r };
